{"mappings":"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AC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;KAAE,EAAE,MAAI;QAAC;QAAE;QAAE;QAAE;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;KAAE,EAAE,MAAI;QAAC;QAAE;QAAE;QAAG;QAAG;KAAE,EAAE,MAAI;QAAC;QAAE;QAAE;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;KAAE,EAAE,MAAI;QAAC;QAAE;QAAE;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;KAAE,EAAE,MAAI;QAAC;QAAE;QAAE;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QA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;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAE;aAAC;YAAE;gBAAC;gBAAE;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;gBAAG;aAAC;YAAE;gBAAC;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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-015f3c9e5dad3bd1.js","node_modules/mermaid/dist/sequenceDiagram-2c95880e.js","node_modules/mermaid/src/diagrams/sequence/parser/sequenceDiagram.jison","node_modules/mermaid/src/diagrams/sequence/sequenceDb.js","node_modules/mermaid/src/diagrams/sequence/styles.js","node_modules/mermaid/src/diagrams/sequence/svgDraw.js","node_modules/mermaid/src/diagrams/sequence/sequenceRenderer.ts","node_modules/mermaid/src/diagrams/sequence/sequenceDiagram.ts","node_modules/mermaid/dist/commonDb-2ace122b.js","node_modules/mermaid/src/commonDb.ts","node_modules/mermaid/dist/setupGraphViewbox-e35e4124.js","node_modules/mermaid/src/setupGraphViewbox.js","node_modules/mermaid/dist/errorRenderer-d05351b9.js","node_modules/mermaid/src/diagrams/error/errorRenderer.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"5c2c2fd772bab410\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}",null,"/** mermaid\n *  https://mermaidjs.github.io/\n *  (c) 2014-2015 Knut Sveidqvist\n *  MIT license.\n *\n *  Based on js sequence diagrams jison grammr\n *  https://bramp.github.io/js-sequence-diagrams/\n *  (c) 2012-2013 Andrew Brampton (bramp.net)\n *  Simplified BSD license.\n */\n%lex\n\n%options case-insensitive\n\n// Special states for recognizing aliases\n// A special state for grabbing text up to the first comment/newline\n%x ID ALIAS LINE\n\n// Directive states\n%x open_directive type_directive arg_directive\n%x acc_title\n%x acc_descr\n%x acc_descr_multiline\n%%\n\n\\%\\%\\{                                                          { this.begin('open_directive'); return 'open_directive'; }\n<open_directive>((?:(?!\\}\\%\\%)[^:.])*)                          { this.begin('type_directive'); return 'type_directive'; }\n<type_directive>\":\"                                             { this.popState(); this.begin('arg_directive'); return ':'; }\n<type_directive,arg_directive>\\}\\%\\%                            { this.popState(); this.popState(); return 'close_directive'; }\n<arg_directive>((?:(?!\\}\\%\\%).|\\n)*)                            return 'arg_directive';\n[\\n]+                                                           return 'NEWLINE';\n\\s+                                                             /* skip all whitespace */\n<ID,ALIAS,LINE>((?!\\n)\\s)+                                      /* skip same-line whitespace */\n<INITIAL,ID,ALIAS,LINE,arg_directive,type_directive,open_directive>\\#[^\\n]*   /* skip comments */\n\\%%(?!\\{)[^\\n]*                                                 /* skip comments */\n[^\\}]\\%\\%[^\\n]*                                                 /* skip comments */\n[0-9]+(?=[ \\n]+)       \t\t\t\t\t\t\t\t\t\t\treturn 'NUM';\n\"box\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ this.begin('LINE'); return 'box'; }\n\"participant\"                                                   { this.begin('ID'); return 'participant'; }\n\"actor\"                                                   \t\t{ this.begin('ID'); return 'participant_actor'; }\n<ID>[^\\->:\\n,;]+?([\\-]*[^\\->:\\n,;]+?)*?(?=((?!\\n)\\s)+\"as\"(?!\\n)\\s|[#\\n;]|$)     { yytext = yytext.trim(); this.begin('ALIAS'); return 'ACTOR'; }\n<ALIAS>\"as\"                                                     { this.popState(); this.popState(); this.begin('LINE'); return 'AS'; }\n<ALIAS>(?:)                                                     { this.popState(); this.popState(); return 'NEWLINE'; }\n\"loop\"                                                          { this.begin('LINE'); return 'loop'; }\n\"rect\"                                                          { this.begin('LINE'); return 'rect'; }\n\"opt\"                                                           { this.begin('LINE'); return 'opt'; }\n\"alt\"                                                           { this.begin('LINE'); return 'alt'; }\n\"else\"                                                          { this.begin('LINE'); return 'else'; }\n\"par\"                                                           { this.begin('LINE'); return 'par'; }\n\"and\"                                                           { this.begin('LINE'); return 'and'; }\n\"critical\"                                                      { this.begin('LINE'); return 'critical'; }\n\"option\"                                                        { this.begin('LINE'); return 'option'; }\n\"break\"                                                         { this.begin('LINE'); return 'break'; }\n<LINE>(?:[:]?(?:no)?wrap:)?[^#\\n;]*                             { this.popState(); return 'restOfLine'; }\n\"end\"                                                           return 'end';\n\"left of\"                                                       return 'left_of';\n\"right of\"                                                      return 'right_of';\n\"links\"                                                         return 'links';\n\"link\"                                                          return 'link';\n\"properties\"                                                    return 'properties';\n\"details\"                                                       return 'details';\n\"over\"                                                          return 'over';\n\"note\"                                                          return 'note';\n\"activate\"                                                      { this.begin('ID'); return 'activate'; }\n\"deactivate\"                                                    { this.begin('ID'); return 'deactivate'; }\n\"title\"\\s[^#\\n;]+                                               return 'title';\n\"title:\"\\s[^#\\n;]+                                              return 'legacy_title';\naccTitle\\s*\":\"\\s*                                               { this.begin(\"acc_title\");return 'acc_title'; }\n<acc_title>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_title_value\"; }\naccDescr\\s*\":\"\\s*                                               { this.begin(\"acc_descr\");return 'acc_descr'; }\n<acc_descr>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_descr_value\"; }\naccDescr\\s*\"{\"\\s*                                { this.begin(\"acc_descr_multiline\");}\n<acc_descr_multiline>[\\}]                       { this.popState(); }\n<acc_descr_multiline>[^\\}]*                     return \"acc_descr_multiline_value\";\n\"sequenceDiagram\"                                               return 'SD';\n\"autonumber\"                                                    return 'autonumber';\n\"off\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 'off';\n\",\"                                                             return ',';\n\";\"                                                             return 'NEWLINE';\n[^\\+\\->:\\n,;]+((?!(\\-x|\\-\\-x|\\-\\)|\\-\\-\\)))[\\-]*[^\\+\\->:\\n,;]+)*             { yytext = yytext.trim(); return 'ACTOR'; }\n\"->>\"                                                           return 'SOLID_ARROW';\n\"-->>\"                                                          return 'DOTTED_ARROW';\n\"->\"                                                            return 'SOLID_OPEN_ARROW';\n\"-->\"                                                           return 'DOTTED_OPEN_ARROW';\n\\-[x]                                                           return 'SOLID_CROSS';\n\\-\\-[x]                                                         return 'DOTTED_CROSS';\n\\-[\\)]                                                          return 'SOLID_POINT';\n\\-\\-[\\)]                                                        return 'DOTTED_POINT';\n\":\"(?:(?:no)?wrap:)?[^#\\n;]+                                    return 'TXT';\n\"+\"                                                             return '+';\n\"-\"                                                             return '-';\n<<EOF>>                                                         return 'NEWLINE';\n.                                                               return 'INVALID';\n\n/lex\n\n%left '^'\n\n%start start\n\n%% /* language grammar */\n\nstart\n\t: SPACE start\n\t| NEWLINE start\n\t| directive start\n\t| SD document { yy.apply($2);return $2; }\n\t;\n\ndocument\n\t: /* empty */ { $$ = [] }\n\t| document line {$1.push($2);$$ = $1}\n\t;\n\nline\n\t: SPACE statement { $$ = $2 }\n\t| statement { $$ = $1 }\n\t| NEWLINE { $$=[]; }\n\t;\n\nbox_section\n\t: /* empty */ { $$ = [] }\n\t| box_section box_line {$1.push($2);$$ = $1}\n\t;\n\nbox_line\n\t: SPACE participant_statement { $$ = $2 }\n\t| participant_statement { $$ = $1 }\n\t| NEWLINE { $$=[]; }\n\t;\n\n\ndirective\n  : openDirective typeDirective closeDirective 'NEWLINE'\n  | openDirective typeDirective ':' argDirective closeDirective 'NEWLINE'\n  ;\n\nstatement\n\t: participant_statement\n\t| 'box' restOfLine box_section end\n\t{\n\t\t$3.unshift({type: 'boxStart', boxData:yy.parseBoxData($2) });\n\t\t$3.push({type: 'boxEnd', boxText:$2});\n\t\t$$=$3;}\n\t| signal 'NEWLINE'\n\t| autonumber NUM NUM 'NEWLINE' { $$= {type:'sequenceIndex',sequenceIndex: Number($2), sequenceIndexStep:Number($3), sequenceVisible:true, signalType:yy.LINETYPE.AUTONUMBER};}\n\t| autonumber NUM 'NEWLINE' { $$ = {type:'sequenceIndex',sequenceIndex: Number($2), sequenceIndexStep:1, sequenceVisible:true, signalType:yy.LINETYPE.AUTONUMBER};}\n\t| autonumber off 'NEWLINE' { $$ = {type:'sequenceIndex', sequenceVisible:false, signalType:yy.LINETYPE.AUTONUMBER};}\n\t| autonumber 'NEWLINE'  {$$ = {type:'sequenceIndex', sequenceVisible:true, signalType:yy.LINETYPE.AUTONUMBER}; }\n\t| 'activate' actor 'NEWLINE' {$$={type: 'activeStart', signalType: yy.LINETYPE.ACTIVE_START, actor: $2};}\n\t| 'deactivate' actor 'NEWLINE' {$$={type: 'activeEnd', signalType: yy.LINETYPE.ACTIVE_END, actor: $2};}\n\t| note_statement 'NEWLINE'\n\t| links_statement 'NEWLINE'\n\t| link_statement 'NEWLINE'\n\t| properties_statement 'NEWLINE'\n\t| details_statement 'NEWLINE'\n\t| title {yy.setDiagramTitle($1.substring(6));$$=$1.substring(6);}\n\t| legacy_title {yy.setDiagramTitle($1.substring(7));$$=$1.substring(7);}\n  | acc_title acc_title_value  { $$=$2.trim();yy.setAccTitle($$); }\n  | acc_descr acc_descr_value  { $$=$2.trim();yy.setAccDescription($$); }\n  | acc_descr_multiline_value { $$=$1.trim();yy.setAccDescription($$); }\n\t| 'loop' restOfLine document end\n\t{\n\t\t$3.unshift({type: 'loopStart', loopText:yy.parseMessage($2), signalType: yy.LINETYPE.LOOP_START});\n\t\t$3.push({type: 'loopEnd', loopText:$2, signalType: yy.LINETYPE.LOOP_END});\n\t\t$$=$3;}\n\t| 'rect' restOfLine document end\n\t{\n\t\t$3.unshift({type: 'rectStart', color:yy.parseMessage($2), signalType: yy.LINETYPE.RECT_START });\n\t\t$3.push({type: 'rectEnd', color:yy.parseMessage($2), signalType: yy.LINETYPE.RECT_END });\n\t\t$$=$3;}\n\t| opt restOfLine document end\n\t{\n\t\t$3.unshift({type: 'optStart', optText:yy.parseMessage($2), signalType: yy.LINETYPE.OPT_START});\n\t\t$3.push({type: 'optEnd', optText:yy.parseMessage($2), signalType: yy.LINETYPE.OPT_END});\n\t\t$$=$3;}\n\t| alt restOfLine else_sections end\n\t{\n\t\t// Alt start\n\t\t$3.unshift({type: 'altStart', altText:yy.parseMessage($2), signalType: yy.LINETYPE.ALT_START});\n\t\t// Content in alt is already in $3\n\t\t// End\n\t\t$3.push({type: 'altEnd', signalType: yy.LINETYPE.ALT_END});\n\t\t$$=$3;}\n\t| par restOfLine par_sections end\n\t{\n\t\t// Parallel start\n\t\t$3.unshift({type: 'parStart', parText:yy.parseMessage($2), signalType: yy.LINETYPE.PAR_START});\n\t\t// Content in par is already in $3\n\t\t// End\n\t\t$3.push({type: 'parEnd', signalType: yy.LINETYPE.PAR_END});\n\t\t$$=$3;}\n\t| critical restOfLine option_sections end\n\t{\n\t\t// critical start\n\t\t$3.unshift({type: 'criticalStart', criticalText:yy.parseMessage($2), signalType: yy.LINETYPE.CRITICAL_START});\n\t\t// Content in critical is already in $3\n\t\t// critical end\n\t\t$3.push({type: 'criticalEnd', signalType: yy.LINETYPE.CRITICAL_END});\n\t\t$$=$3;}\n\t| break restOfLine document end\n\t{\n\t\t$3.unshift({type: 'breakStart', breakText:yy.parseMessage($2), signalType: yy.LINETYPE.BREAK_START});\n\t\t$3.push({type: 'breakEnd', optText:yy.parseMessage($2), signalType: yy.LINETYPE.BREAK_END});\n\t\t$$=$3;}\n  | directive\n\t;\n\noption_sections\n\t: document\n\t| document option restOfLine option_sections\n\t{ $$ = $1.concat([{type: 'option', optionText:yy.parseMessage($3), signalType: yy.LINETYPE.CRITICAL_OPTION}, $4]); }\n\t;\n\npar_sections\n\t: document\n\t| document and restOfLine par_sections\n\t{ $$ = $1.concat([{type: 'and', parText:yy.parseMessage($3), signalType: yy.LINETYPE.PAR_AND}, $4]); }\n\t;\n\nelse_sections\n\t: document\n\t| document else restOfLine else_sections\n\t{ $$ = $1.concat([{type: 'else', altText:yy.parseMessage($3), signalType: yy.LINETYPE.ALT_ELSE}, $4]); }\n\t;\n\nparticipant_statement\n\t: 'participant' actor 'AS' restOfLine 'NEWLINE' {$2.type='addParticipant';$2.description=yy.parseMessage($4); $$=$2;}\n\t| 'participant' actor 'NEWLINE' {$2.type='addParticipant';$$=$2;}\n\t| 'participant_actor' actor 'AS' restOfLine 'NEWLINE' {$2.type='addActor';$2.description=yy.parseMessage($4); $$=$2;}\n\t| 'participant_actor' actor 'NEWLINE' {$2.type='addActor'; $$=$2;}\n\t;\n\nnote_statement\n\t: 'note' placement actor text2\n\t{\n\t\t$$ = [$3, {type:'addNote', placement:$2, actor:$3.actor, text:$4}];}\n\t| 'note' 'over' actor_pair text2\n\t{\n\t\t// Coerce actor_pair into a [to, from, ...] array\n\t\t$2 = [].concat($3, $3).slice(0, 2);\n\t\t$2[0] = $2[0].actor;\n\t\t$2[1] = $2[1].actor;\n\t\t$$ = [$3, {type:'addNote', placement:yy.PLACEMENT.OVER, actor:$2.slice(0, 2), text:$4}];}\n\t;\n\nlinks_statement\n\t: 'links' actor text2\n\t{\n\t\t$$ = [$2, {type:'addLinks', actor:$2.actor, text:$3}];\n  }\n\t;\n\nlink_statement\n\t: 'link' actor text2\n\t{\n\t\t$$ = [$2, {type:'addALink', actor:$2.actor, text:$3}];\n  }\n\t;\n\nproperties_statement\n\t: 'properties' actor text2\n\t{\n\t\t$$ = [$2, {type:'addProperties', actor:$2.actor, text:$3}];\n  }\n\t;\n\ndetails_statement\n\t: 'details' actor text2\n\t{\n\t\t$$ = [$2, {type:'addDetails', actor:$2.actor, text:$3}];\n  }\n\t;\n\nspaceList\n    : SPACE spaceList\n    | SPACE\n    ;\nactor_pair\n\t: actor ',' actor   { $$ = [$1, $3]; }\n\t| actor             { $$ = $1; }\n\t;\n\nplacement\n\t: 'left_of'   { $$ = yy.PLACEMENT.LEFTOF; }\n\t| 'right_of'  { $$ = yy.PLACEMENT.RIGHTOF; }\n\t;\n\nsignal\n\t: actor signaltype '+' actor text2\n\t{ $$ = [$1,$4,{type: 'addMessage', from:$1.actor, to:$4.actor, signalType:$2, msg:$5},\n\t              {type: 'activeStart', signalType: yy.LINETYPE.ACTIVE_START, actor: $4}\n\t             ]}\n\t| actor signaltype '-' actor text2\n\t{ $$ = [$1,$4,{type: 'addMessage', from:$1.actor, to:$4.actor, signalType:$2, msg:$5},\n\t             {type: 'activeEnd', signalType: yy.LINETYPE.ACTIVE_END, actor: $1}\n\t             ]}\n\t| actor signaltype actor text2\n\t{ $$ = [$1,$3,{type: 'addMessage', from:$1.actor, to:$3.actor, signalType:$2, msg:$4}]}\n\t;\n\n// actor\n// \t: actor_participant\n// \t| actor_actor\n// \t;\n\nactor: ACTOR {$$={ type: 'addParticipant', actor:$1}};\n// actor_actor: ACTOR {$$={type: 'addActor', actor:$1}};\n\nsignaltype\n\t: SOLID_OPEN_ARROW  { $$ = yy.LINETYPE.SOLID_OPEN; }\n\t| DOTTED_OPEN_ARROW { $$ = yy.LINETYPE.DOTTED_OPEN; }\n\t| SOLID_ARROW       { $$ = yy.LINETYPE.SOLID; }\n\t| DOTTED_ARROW      { $$ = yy.LINETYPE.DOTTED; }\n\t| SOLID_CROSS       { $$ = yy.LINETYPE.SOLID_CROSS; }\n\t| DOTTED_CROSS      { $$ = yy.LINETYPE.DOTTED_CROSS; }\n\t| SOLID_POINT { $$ = yy.LINETYPE.SOLID_POINT; }\n\t| DOTTED_POINT { $$ = yy.LINETYPE.DOTTED_POINT; }\n\t;\n\ntext2\n  : TXT {$$ = yy.parseMessage($1.trim().substring(1)) }\n  ;\n\nopenDirective\n  : open_directive { yy.parseDirective('%%{', 'open_directive'); }\n  ;\n\ntypeDirective\n  : type_directive { yy.parseDirective($1, 'type_directive'); }\n  ;\n\nargDirective\n  : arg_directive { $1 = $1.trim().replace(/'/g, '\"'); yy.parseDirective($1, 'arg_directive'); }\n  ;\n\ncloseDirective\n  : close_directive { yy.parseDirective('}%%', 'close_directive', 'sequence'); }\n  ;\n\n%%\n","import mermaidAPI from '../../mermaidAPI';\nimport * as configApi from '../../config';\nimport { log } from '../../logger';\nimport { sanitizeText } from '../common/common';\nimport {\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nlet prevActor = undefined;\nlet actors = {};\nlet boxes = [];\nlet messages = [];\nconst notes = [];\nlet sequenceNumbersEnabled = false;\nlet wrapEnabled;\nlet currentBox = undefined;\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nexport const addBox = function (data) {\n  boxes.push({\n    name: data.text,\n    wrap: (data.wrap === undefined && autoWrap()) || !!data.wrap,\n    fill: data.color,\n    actorKeys: [],\n  });\n  currentBox = boxes.slice(-1)[0];\n};\n\nexport const addActor = function (id, name, description, type) {\n  let assignedBox = currentBox;\n  const old = actors[id];\n  if (old) {\n    // If already set and trying to set to a new one throw error\n    if (currentBox && old.box && currentBox !== old.box) {\n      throw new Error(\n        'A same participant should only be defined in one Box: ' +\n          old.name +\n          \" can't be in '\" +\n          old.box.name +\n          \"' and in '\" +\n          currentBox.name +\n          \"' at the same time.\"\n      );\n    }\n\n    // Don't change the box if already\n    assignedBox = old.box ? old.box : currentBox;\n    old.box = assignedBox;\n\n    // Don't allow description nulling\n    if (old && name === old.name && description == null) {\n      return;\n    }\n  }\n\n  // Don't allow null descriptions, either\n  if (description == null || description.text == null) {\n    description = { text: name, wrap: null, type };\n  }\n  if (type == null || description.text == null) {\n    description = { text: name, wrap: null, type };\n  }\n\n  actors[id] = {\n    box: assignedBox,\n    name: name,\n    description: description.text,\n    wrap: (description.wrap === undefined && autoWrap()) || !!description.wrap,\n    prevActor: prevActor,\n    links: {},\n    properties: {},\n    actorCnt: null,\n    rectData: null,\n    type: type || 'participant',\n  };\n  if (prevActor && actors[prevActor]) {\n    actors[prevActor].nextActor = id;\n  }\n\n  if (currentBox) {\n    currentBox.actorKeys.push(id);\n  }\n  prevActor = id;\n};\n\nconst activationCount = (part) => {\n  let i;\n  let count = 0;\n  for (i = 0; i < messages.length; i++) {\n    if (messages[i].type === LINETYPE.ACTIVE_START && messages[i].from.actor === part) {\n      count++;\n    }\n    if (messages[i].type === LINETYPE.ACTIVE_END && messages[i].from.actor === part) {\n      count--;\n    }\n  }\n  return count;\n};\n\nexport const addMessage = function (idFrom, idTo, message, answer) {\n  messages.push({\n    from: idFrom,\n    to: idTo,\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n    answer: answer,\n  });\n};\n\nexport const addSignal = function (\n  idFrom,\n  idTo,\n  message = { text: undefined, wrap: undefined },\n  messageType\n) {\n  if (messageType === LINETYPE.ACTIVE_END) {\n    const cnt = activationCount(idFrom.actor);\n    if (cnt < 1) {\n      // Bail out as there is an activation signal from an inactive participant\n      let error = new Error('Trying to inactivate an inactive participant (' + idFrom.actor + ')');\n      error.hash = {\n        text: '->>-',\n        token: '->>-',\n        line: '1',\n        loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n        expected: [\"'ACTIVE_PARTICIPANT'\"],\n      };\n      throw error;\n    }\n  }\n  messages.push({\n    from: idFrom,\n    to: idTo,\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n    type: messageType,\n  });\n  return true;\n};\n\nexport const hasAtLeastOneBox = function () {\n  return boxes.length > 0;\n};\n\nexport const hasAtLeastOneBoxWithTitle = function () {\n  return boxes.some((b) => b.name);\n};\n\nexport const getMessages = function () {\n  return messages;\n};\n\nexport const getBoxes = function () {\n  return boxes;\n};\nexport const getActors = function () {\n  return actors;\n};\nexport const getActor = function (id) {\n  return actors[id];\n};\nexport const getActorKeys = function () {\n  return Object.keys(actors);\n};\nexport const enableSequenceNumbers = function () {\n  sequenceNumbersEnabled = true;\n};\nexport const disableSequenceNumbers = function () {\n  sequenceNumbersEnabled = false;\n};\nexport const showSequenceNumbers = () => sequenceNumbersEnabled;\n\nexport const setWrap = function (wrapSetting) {\n  wrapEnabled = wrapSetting;\n};\n\nexport const autoWrap = () => {\n  // if setWrap has been called, use that value, otherwise use the value from the config\n  // TODO: refactor, always use the config value let setWrap update the config value\n  if (wrapEnabled !== undefined) {\n    return wrapEnabled;\n  }\n  return configApi.getConfig().sequence.wrap;\n};\n\nexport const clear = function () {\n  actors = {};\n  boxes = [];\n  messages = [];\n  sequenceNumbersEnabled = false;\n  commonClear();\n};\n\nexport const parseMessage = function (str) {\n  const _str = str.trim();\n  const message = {\n    text: _str.replace(/^:?(?:no)?wrap:/, '').trim(),\n    wrap:\n      _str.match(/^:?wrap:/) !== null\n        ? true\n        : _str.match(/^:?nowrap:/) !== null\n        ? false\n        : undefined,\n  };\n  log.debug('parseMessage:', message);\n  return message;\n};\n\n// We expect the box statement to be color first then description\n// The color can be rgb,rgba,hsl,hsla, or css code names  #hex codes are not supported for now because of the way the char # is handled\n// We extract first segment as color, the rest of the line is considered as text\nexport const parseBoxData = function (str) {\n  const match = str.match(/^((?:rgba?|hsla?)\\s*\\(.*\\)|\\w*)(.*)$/);\n  let color = match != null && match[1] ? match[1].trim() : 'transparent';\n  let title = match != null && match[2] ? match[2].trim() : undefined;\n\n  // check that the string is a color\n  if (window && window.CSS) {\n    if (!window.CSS.supports('color', color)) {\n      color = 'transparent';\n      title = str.trim();\n    }\n  } else {\n    const style = new Option().style;\n    style.color = color;\n    if (style.color !== color) {\n      color = 'transparent';\n      title = str.trim();\n    }\n  }\n\n  const boxData = {\n    color: color,\n    text:\n      title !== undefined\n        ? sanitizeText(title.replace(/^:?(?:no)?wrap:/, ''), configApi.getConfig())\n        : undefined,\n    wrap:\n      title !== undefined\n        ? title.match(/^:?wrap:/) !== null\n          ? true\n          : title.match(/^:?nowrap:/) !== null\n          ? false\n          : undefined\n        : undefined,\n  };\n  return boxData;\n};\n\nexport const LINETYPE = {\n  SOLID: 0,\n  DOTTED: 1,\n  NOTE: 2,\n  SOLID_CROSS: 3,\n  DOTTED_CROSS: 4,\n  SOLID_OPEN: 5,\n  DOTTED_OPEN: 6,\n  LOOP_START: 10,\n  LOOP_END: 11,\n  ALT_START: 12,\n  ALT_ELSE: 13,\n  ALT_END: 14,\n  OPT_START: 15,\n  OPT_END: 16,\n  ACTIVE_START: 17,\n  ACTIVE_END: 18,\n  PAR_START: 19,\n  PAR_AND: 20,\n  PAR_END: 21,\n  RECT_START: 22,\n  RECT_END: 23,\n  SOLID_POINT: 24,\n  DOTTED_POINT: 25,\n  AUTONUMBER: 26,\n  CRITICAL_START: 27,\n  CRITICAL_OPTION: 28,\n  CRITICAL_END: 29,\n  BREAK_START: 30,\n  BREAK_END: 31,\n};\n\nexport const ARROWTYPE = {\n  FILLED: 0,\n  OPEN: 1,\n};\n\nexport const PLACEMENT = {\n  LEFTOF: 0,\n  RIGHTOF: 1,\n  OVER: 2,\n};\n\nexport const addNote = function (actor, placement, message) {\n  const note = {\n    actor: actor,\n    placement: placement,\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n  };\n\n  // Coerce actor into a [to, from, ...] array\n  // eslint-disable-next-line unicorn/prefer-spread\n  const actors = [].concat(actor, actor);\n\n  notes.push(note);\n  messages.push({\n    from: actors[0],\n    to: actors[1],\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n    type: LINETYPE.NOTE,\n    placement: placement,\n  });\n};\n\nexport const addLinks = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  // JSON.parse the text\n  try {\n    let sanitizedText = sanitizeText(text.text, configApi.getConfig());\n    sanitizedText = sanitizedText.replace(/&amp;/g, '&');\n    sanitizedText = sanitizedText.replace(/&equals;/g, '=');\n    const links = JSON.parse(sanitizedText);\n    // add the deserialized text to the actor's links field.\n    insertLinks(actor, links);\n  } catch (e) {\n    log.error('error while parsing actor link text', e);\n  }\n};\n\nexport const addALink = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  try {\n    const links = {};\n    let sanitizedText = sanitizeText(text.text, configApi.getConfig());\n    var sep = sanitizedText.indexOf('@');\n    sanitizedText = sanitizedText.replace(/&amp;/g, '&');\n    sanitizedText = sanitizedText.replace(/&equals;/g, '=');\n    var label = sanitizedText.slice(0, sep - 1).trim();\n    var link = sanitizedText.slice(sep + 1).trim();\n\n    links[label] = link;\n    // add the deserialized text to the actor's links field.\n    insertLinks(actor, links);\n  } catch (e) {\n    log.error('error while parsing actor link text', e);\n  }\n};\n\n/**\n * @param {any} actor\n * @param {any} links\n */\nfunction insertLinks(actor, links) {\n  if (actor.links == null) {\n    actor.links = links;\n  } else {\n    for (let key in links) {\n      actor.links[key] = links[key];\n    }\n  }\n}\n\nexport const addProperties = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  // JSON.parse the text\n  try {\n    let sanitizedText = sanitizeText(text.text, configApi.getConfig());\n    const properties = JSON.parse(sanitizedText);\n    // add the deserialized text to the actor's property field.\n    insertProperties(actor, properties);\n  } catch (e) {\n    log.error('error while parsing actor properties text', e);\n  }\n};\n\n/**\n * @param {any} actor\n * @param {any} properties\n */\nfunction insertProperties(actor, properties) {\n  if (actor.properties == null) {\n    actor.properties = properties;\n  } else {\n    for (let key in properties) {\n      actor.properties[key] = properties[key];\n    }\n  }\n}\n\n/**\n *\n */\nfunction boxEnd() {\n  currentBox = undefined;\n}\n\nexport const addDetails = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  const elem = document.getElementById(text.text);\n\n  // JSON.parse the text\n  try {\n    const text = elem.innerHTML;\n    const details = JSON.parse(text);\n    // add the deserialized text to the actor's property field.\n    if (details['properties']) {\n      insertProperties(actor, details['properties']);\n    }\n\n    if (details['links']) {\n      insertLinks(actor, details['links']);\n    }\n  } catch (e) {\n    log.error('error while parsing actor details text', e);\n  }\n};\n\nexport const getActorProperty = function (actor, key) {\n  if (actor !== undefined && actor.properties !== undefined) {\n    return actor.properties[key];\n  }\n\n  return undefined;\n};\n\nexport const apply = function (param) {\n  if (Array.isArray(param)) {\n    param.forEach(function (item) {\n      apply(item);\n    });\n  } else {\n    switch (param.type) {\n      case 'sequenceIndex':\n        messages.push({\n          from: undefined,\n          to: undefined,\n          message: {\n            start: param.sequenceIndex,\n            step: param.sequenceIndexStep,\n            visible: param.sequenceVisible,\n          },\n          wrap: false,\n          type: param.signalType,\n        });\n        break;\n      case 'addParticipant':\n        addActor(param.actor, param.actor, param.description, 'participant');\n        break;\n      case 'addActor':\n        addActor(param.actor, param.actor, param.description, 'actor');\n        break;\n      case 'activeStart':\n        addSignal(param.actor, undefined, undefined, param.signalType);\n        break;\n      case 'activeEnd':\n        addSignal(param.actor, undefined, undefined, param.signalType);\n        break;\n      case 'addNote':\n        addNote(param.actor, param.placement, param.text);\n        break;\n      case 'addLinks':\n        addLinks(param.actor, param.text);\n        break;\n      case 'addALink':\n        addALink(param.actor, param.text);\n        break;\n      case 'addProperties':\n        addProperties(param.actor, param.text);\n        break;\n      case 'addDetails':\n        addDetails(param.actor, param.text);\n        break;\n      case 'addMessage':\n        addSignal(param.from, param.to, param.msg, param.signalType);\n        break;\n      case 'boxStart':\n        addBox(param.boxData);\n        break;\n      case 'boxEnd':\n        boxEnd();\n        break;\n      case 'loopStart':\n        addSignal(undefined, undefined, param.loopText, param.signalType);\n        break;\n      case 'loopEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'rectStart':\n        addSignal(undefined, undefined, param.color, param.signalType);\n        break;\n      case 'rectEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'optStart':\n        addSignal(undefined, undefined, param.optText, param.signalType);\n        break;\n      case 'optEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'altStart':\n        addSignal(undefined, undefined, param.altText, param.signalType);\n        break;\n      case 'else':\n        addSignal(undefined, undefined, param.altText, param.signalType);\n        break;\n      case 'altEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'setAccTitle':\n        setAccTitle(param.text);\n        break;\n      case 'parStart':\n        addSignal(undefined, undefined, param.parText, param.signalType);\n        break;\n      case 'and':\n        addSignal(undefined, undefined, param.parText, param.signalType);\n        break;\n      case 'parEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'criticalStart':\n        addSignal(undefined, undefined, param.criticalText, param.signalType);\n        break;\n      case 'option':\n        addSignal(undefined, undefined, param.optionText, param.signalType);\n        break;\n      case 'criticalEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'breakStart':\n        addSignal(undefined, undefined, param.breakText, param.signalType);\n        break;\n      case 'breakEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n    }\n  }\n};\n\nexport default {\n  addActor,\n  addMessage,\n  addSignal,\n  addLinks,\n  addDetails,\n  addProperties,\n  autoWrap,\n  setWrap,\n  enableSequenceNumbers,\n  disableSequenceNumbers,\n  showSequenceNumbers,\n  getMessages,\n  getActors,\n  getActor,\n  getActorKeys,\n  getActorProperty,\n  getAccTitle,\n  getBoxes,\n  getDiagramTitle,\n  setDiagramTitle,\n  parseDirective,\n  getConfig: () => configApi.getConfig().sequence,\n  clear,\n  parseMessage,\n  parseBoxData,\n  LINETYPE,\n  ARROWTYPE,\n  PLACEMENT,\n  addNote,\n  setAccTitle,\n  apply,\n  setAccDescription,\n  getAccDescription,\n  hasAtLeastOneBox,\n  hasAtLeastOneBoxWithTitle,\n};\n","const getStyles = (options) =>\n  `.actor {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n  }\n\n  text.actor > tspan {\n    fill: ${options.actorTextColor};\n    stroke: none;\n  }\n\n  .actor-line {\n    stroke: ${options.actorLineColor};\n  }\n\n  .messageLine0 {\n    stroke-width: 1.5;\n    stroke-dasharray: none;\n    stroke: ${options.signalColor};\n  }\n\n  .messageLine1 {\n    stroke-width: 1.5;\n    stroke-dasharray: 2, 2;\n    stroke: ${options.signalColor};\n  }\n\n  #arrowhead path {\n    fill: ${options.signalColor};\n    stroke: ${options.signalColor};\n  }\n\n  .sequenceNumber {\n    fill: ${options.sequenceNumberColor};\n  }\n\n  #sequencenumber {\n    fill: ${options.signalColor};\n  }\n\n  #crosshead path {\n    fill: ${options.signalColor};\n    stroke: ${options.signalColor};\n  }\n\n  .messageText {\n    fill: ${options.signalTextColor};\n    stroke: none;\n  }\n\n  .labelBox {\n    stroke: ${options.labelBoxBorderColor};\n    fill: ${options.labelBoxBkgColor};\n  }\n\n  .labelText, .labelText > tspan {\n    fill: ${options.labelTextColor};\n    stroke: none;\n  }\n\n  .loopText, .loopText > tspan {\n    fill: ${options.loopTextColor};\n    stroke: none;\n  }\n\n  .loopLine {\n    stroke-width: 2px;\n    stroke-dasharray: 2, 2;\n    stroke: ${options.labelBoxBorderColor};\n    fill: ${options.labelBoxBorderColor};\n  }\n\n  .note {\n    //stroke: #decc93;\n    stroke: ${options.noteBorderColor};\n    fill: ${options.noteBkgColor};\n  }\n\n  .noteText, .noteText > tspan {\n    fill: ${options.noteTextColor};\n    stroke: none;\n  }\n\n  .activation0 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .activation1 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .activation2 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .actorPopupMenu {\n    position: absolute;\n  }\n\n  .actorPopupMenuPanel {\n    position: absolute;\n    fill: ${options.actorBkg};\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n    filter: drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));\n}\n  .actor-man line {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n  }\n  .actor-man circle, line {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n    stroke-width: 2px;\n  }\n`;\n\nexport default getStyles;\n","import common from '../common/common';\nimport { addFunction } from '../../interactionDb';\nimport { parseFontSize } from '../../utils';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\n\nexport const drawRect = function (elem, rectData) {\n  const rectElem = elem.append('rect');\n  rectElem.attr('x', rectData.x);\n  rectElem.attr('y', rectData.y);\n  rectElem.attr('fill', rectData.fill);\n  rectElem.attr('stroke', rectData.stroke);\n  rectElem.attr('width', rectData.width);\n  rectElem.attr('height', rectData.height);\n  rectElem.attr('rx', rectData.rx);\n  rectElem.attr('ry', rectData.ry);\n\n  if (rectData.class !== undefined) {\n    rectElem.attr('class', rectData.class);\n  }\n\n  return rectElem;\n};\n\n// const sanitizeUrl = function (s) {\n//   return s\n//     .replace(/&/g, '&amp;')\n//     .replace(/</g, '&lt;')\n//     .replace(/javascript:/g, '');\n// };\n\nconst addPopupInteraction = (id, actorCnt) => {\n  addFunction(() => {\n    const arr = document.querySelectorAll(id);\n    // This will be the case when running in sandboxed mode\n    if (arr.length === 0) {\n      return;\n    }\n    arr[0].addEventListener('mouseover', function () {\n      popupMenuUpFunc('actor' + actorCnt + '_popup');\n    });\n    arr[0].addEventListener('mouseout', function () {\n      popupMenuDownFunc('actor' + actorCnt + '_popup');\n    });\n  });\n};\nexport const drawPopup = function (elem, actor, minMenuWidth, textAttrs, forceMenus) {\n  if (actor.links === undefined || actor.links === null || Object.keys(actor.links).length === 0) {\n    return { height: 0, width: 0 };\n  }\n\n  const links = actor.links;\n  const actorCnt = actor.actorCnt;\n  const rectData = actor.rectData;\n\n  var displayValue = 'none';\n  if (forceMenus) {\n    displayValue = 'block !important';\n  }\n\n  const g = elem.append('g');\n  g.attr('id', 'actor' + actorCnt + '_popup');\n  g.attr('class', 'actorPopupMenu');\n  g.attr('display', displayValue);\n  addPopupInteraction('#actor' + actorCnt + '_popup', actorCnt);\n  var actorClass = '';\n  if (rectData.class !== undefined) {\n    actorClass = ' ' + rectData.class;\n  }\n\n  let menuWidth = rectData.width > minMenuWidth ? rectData.width : minMenuWidth;\n\n  const rectElem = g.append('rect');\n  rectElem.attr('class', 'actorPopupMenuPanel' + actorClass);\n  rectElem.attr('x', rectData.x);\n  rectElem.attr('y', rectData.height);\n  rectElem.attr('fill', rectData.fill);\n  rectElem.attr('stroke', rectData.stroke);\n  rectElem.attr('width', menuWidth);\n  rectElem.attr('height', rectData.height);\n  rectElem.attr('rx', rectData.rx);\n  rectElem.attr('ry', rectData.ry);\n  if (links != null) {\n    var linkY = 20;\n    for (let key in links) {\n      var linkElem = g.append('a');\n      var sanitizedLink = sanitizeUrl(links[key]);\n      linkElem.attr('xlink:href', sanitizedLink);\n      linkElem.attr('target', '_blank');\n\n      _drawMenuItemTextCandidateFunc(textAttrs)(\n        key,\n        linkElem,\n        rectData.x + 10,\n        rectData.height + linkY,\n        menuWidth,\n        20,\n        { class: 'actor' },\n        textAttrs\n      );\n\n      linkY += 30;\n    }\n  }\n\n  rectElem.attr('height', linkY);\n\n  return { height: rectData.height + linkY, width: menuWidth };\n};\n\nexport const drawImage = function (elem, x, y, link) {\n  const imageElem = elem.append('image');\n  imageElem.attr('x', x);\n  imageElem.attr('y', y);\n  var sanitizedLink = sanitizeUrl(link);\n  imageElem.attr('xlink:href', sanitizedLink);\n};\n\nexport const drawEmbeddedImage = function (elem, x, y, link) {\n  const imageElem = elem.append('use');\n  imageElem.attr('x', x);\n  imageElem.attr('y', y);\n  var sanitizedLink = sanitizeUrl(link);\n  imageElem.attr('xlink:href', '#' + sanitizedLink);\n};\n\nexport const popupMenu = function (popid) {\n  return (\n    \"var pu = document.getElementById('\" +\n    popid +\n    \"'); if (pu != null) { pu.style.display = 'block'; }\"\n  );\n};\n\nexport const popdownMenu = function (popid) {\n  return (\n    \"var pu = document.getElementById('\" +\n    popid +\n    \"'); if (pu != null) { pu.style.display = 'none'; }\"\n  );\n};\n\nconst popupMenuUpFunc = function (popupId) {\n  var pu = document.getElementById(popupId);\n  if (pu != null) {\n    pu.style.display = 'block';\n  }\n};\n\nconst popupMenuDownFunc = function (popupId) {\n  var pu = document.getElementById(popupId);\n  if (pu != null) {\n    pu.style.display = 'none';\n  }\n};\nexport const drawText = function (elem, textData) {\n  let prevTextHeight = 0,\n    textHeight = 0;\n  const lines = textData.text.split(common.lineBreakRegex);\n\n  const [_textFontSize, _textFontSizePx] = parseFontSize(textData.fontSize);\n\n  let textElems = [];\n  let dy = 0;\n  let yfunc = () => textData.y;\n  if (\n    textData.valign !== undefined &&\n    textData.textMargin !== undefined &&\n    textData.textMargin > 0\n  ) {\n    switch (textData.valign) {\n      case 'top':\n      case 'start':\n        yfunc = () => Math.round(textData.y + textData.textMargin);\n        break;\n      case 'middle':\n      case 'center':\n        yfunc = () =>\n          Math.round(textData.y + (prevTextHeight + textHeight + textData.textMargin) / 2);\n        break;\n      case 'bottom':\n      case 'end':\n        yfunc = () =>\n          Math.round(\n            textData.y +\n              (prevTextHeight + textHeight + 2 * textData.textMargin) -\n              textData.textMargin\n          );\n        break;\n    }\n  }\n  if (\n    textData.anchor !== undefined &&\n    textData.textMargin !== undefined &&\n    textData.width !== undefined\n  ) {\n    switch (textData.anchor) {\n      case 'left':\n      case 'start':\n        textData.x = Math.round(textData.x + textData.textMargin);\n        textData.anchor = 'start';\n        textData.dominantBaseline = 'middle';\n        textData.alignmentBaseline = 'middle';\n        break;\n      case 'middle':\n      case 'center':\n        textData.x = Math.round(textData.x + textData.width / 2);\n        textData.anchor = 'middle';\n        textData.dominantBaseline = 'middle';\n        textData.alignmentBaseline = 'middle';\n        break;\n      case 'right':\n      case 'end':\n        textData.x = Math.round(textData.x + textData.width - textData.textMargin);\n        textData.anchor = 'end';\n        textData.dominantBaseline = 'middle';\n        textData.alignmentBaseline = 'middle';\n        break;\n    }\n  }\n  for (let [i, line] of lines.entries()) {\n    if (\n      textData.textMargin !== undefined &&\n      textData.textMargin === 0 &&\n      _textFontSize !== undefined\n    ) {\n      dy = i * _textFontSize;\n    }\n\n    const textElem = elem.append('text');\n    textElem.attr('x', textData.x);\n    textElem.attr('y', yfunc());\n    if (textData.anchor !== undefined) {\n      textElem\n        .attr('text-anchor', textData.anchor)\n        .attr('dominant-baseline', textData.dominantBaseline)\n        .attr('alignment-baseline', textData.alignmentBaseline);\n    }\n    if (textData.fontFamily !== undefined) {\n      textElem.style('font-family', textData.fontFamily);\n    }\n    if (_textFontSizePx !== undefined) {\n      textElem.style('font-size', _textFontSizePx);\n    }\n    if (textData.fontWeight !== undefined) {\n      textElem.style('font-weight', textData.fontWeight);\n    }\n    if (textData.fill !== undefined) {\n      textElem.attr('fill', textData.fill);\n    }\n    if (textData.class !== undefined) {\n      textElem.attr('class', textData.class);\n    }\n    if (textData.dy !== undefined) {\n      textElem.attr('dy', textData.dy);\n    } else if (dy !== 0) {\n      textElem.attr('dy', dy);\n    }\n\n    if (textData.tspan) {\n      const span = textElem.append('tspan');\n      span.attr('x', textData.x);\n      if (textData.fill !== undefined) {\n        span.attr('fill', textData.fill);\n      }\n      span.text(line);\n    } else {\n      textElem.text(line);\n    }\n    if (\n      textData.valign !== undefined &&\n      textData.textMargin !== undefined &&\n      textData.textMargin > 0\n    ) {\n      textHeight += (textElem._groups || textElem)[0][0].getBBox().height;\n      prevTextHeight = textHeight;\n    }\n\n    textElems.push(textElem);\n  }\n\n  return textElems;\n};\n\nexport const drawLabel = function (elem, txtObject) {\n  /**\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} cut\n   * @returns {any}\n   */\n  function genPoints(x, y, width, height, cut) {\n    return (\n      x +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      (y + height - cut) +\n      ' ' +\n      (x + width - cut * 1.2) +\n      ',' +\n      (y + height) +\n      ' ' +\n      x +\n      ',' +\n      (y + height)\n    );\n  }\n  const polygon = elem.append('polygon');\n  polygon.attr('points', genPoints(txtObject.x, txtObject.y, txtObject.width, txtObject.height, 7));\n  polygon.attr('class', 'labelBox');\n\n  txtObject.y = txtObject.y + txtObject.height / 2;\n\n  drawText(elem, txtObject);\n  return polygon;\n};\n\nlet actorCnt = -1;\n\nexport const fixLifeLineHeights = (diagram, bounds) => {\n  if (!diagram.selectAll) {\n    return;\n  }\n  diagram\n    .selectAll('.actor-line')\n    .attr('class', '200')\n    .attr('y2', bounds - 55);\n};\n\n/**\n * Draws an actor in the diagram with the attached line\n *\n * @param {any} elem - The diagram we'll draw to.\n * @param {any} actor - The actor to draw.\n * @param {any} conf - DrawText implementation discriminator object\n * @param {boolean} isFooter - If the actor is the footer one\n */\nconst drawActorTypeParticipant = function (elem, actor, conf, isFooter) {\n  const center = actor.x + actor.width / 2;\n  const centerY = actor.y + 5;\n\n  const boxpluslineGroup = elem.append('g');\n  var g = boxpluslineGroup;\n\n  if (!isFooter) {\n    actorCnt++;\n    g.append('line')\n      .attr('id', 'actor' + actorCnt)\n      .attr('x1', center)\n      .attr('y1', centerY)\n      .attr('x2', center)\n      .attr('y2', 2000)\n      .attr('class', 'actor-line')\n      .attr('stroke-width', '0.5px')\n      .attr('stroke', '#999');\n\n    g = boxpluslineGroup.append('g');\n    actor.actorCnt = actorCnt;\n\n    if (actor.links != null) {\n      g.attr('id', 'root-' + actorCnt);\n      addPopupInteraction('#root-' + actorCnt, actorCnt);\n    }\n  }\n\n  const rect = getNoteRect();\n  var cssclass = 'actor';\n  if (actor.properties != null && actor.properties['class']) {\n    cssclass = actor.properties['class'];\n  } else {\n    rect.fill = '#eaeaea';\n  }\n  rect.x = actor.x;\n  rect.y = actor.y;\n  rect.width = actor.width;\n  rect.height = actor.height;\n  rect.class = cssclass;\n  rect.rx = 3;\n  rect.ry = 3;\n  const rectElem = drawRect(g, rect);\n  actor.rectData = rect;\n\n  if (actor.properties != null && actor.properties['icon']) {\n    const iconSrc = actor.properties['icon'].trim();\n    if (iconSrc.charAt(0) === '@') {\n      drawEmbeddedImage(g, rect.x + rect.width - 20, rect.y + 10, iconSrc.substr(1));\n    } else {\n      drawImage(g, rect.x + rect.width - 20, rect.y + 10, iconSrc);\n    }\n  }\n\n  _drawTextCandidateFunc(conf)(\n    actor.description,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: 'actor' },\n    conf\n  );\n\n  let height = actor.height;\n  if (rectElem.node) {\n    const bounds = rectElem.node().getBBox();\n    actor.height = bounds.height;\n    height = bounds.height;\n  }\n\n  return height;\n};\n\nconst drawActorTypeActor = function (elem, actor, conf, isFooter) {\n  const center = actor.x + actor.width / 2;\n  const centerY = actor.y + 80;\n\n  if (!isFooter) {\n    actorCnt++;\n    elem\n      .append('line')\n      .attr('id', 'actor' + actorCnt)\n      .attr('x1', center)\n      .attr('y1', centerY)\n      .attr('x2', center)\n      .attr('y2', 2000)\n      .attr('class', 'actor-line')\n      .attr('stroke-width', '0.5px')\n      .attr('stroke', '#999');\n  }\n  const actElem = elem.append('g');\n  actElem.attr('class', 'actor-man');\n\n  const rect = getNoteRect();\n  rect.x = actor.x;\n  rect.y = actor.y;\n  rect.fill = '#eaeaea';\n  rect.width = actor.width;\n  rect.height = actor.height;\n  rect.class = 'actor';\n  rect.rx = 3;\n  rect.ry = 3;\n  // drawRect(actElem, rect);\n\n  actElem\n    .append('line')\n    .attr('id', 'actor-man-torso' + actorCnt)\n    .attr('x1', center)\n    .attr('y1', actor.y + 25)\n    .attr('x2', center)\n    .attr('y2', actor.y + 45);\n\n  actElem\n    .append('line')\n    .attr('id', 'actor-man-arms' + actorCnt)\n    .attr('x1', center - 18)\n    .attr('y1', actor.y + 33)\n    .attr('x2', center + 18)\n    .attr('y2', actor.y + 33);\n  actElem\n    .append('line')\n    .attr('x1', center - 18)\n    .attr('y1', actor.y + 60)\n    .attr('x2', center)\n    .attr('y2', actor.y + 45);\n  actElem\n    .append('line')\n    .attr('x1', center)\n    .attr('y1', actor.y + 45)\n    .attr('x2', center + 16)\n    .attr('y2', actor.y + 60);\n\n  const circle = actElem.append('circle');\n  circle.attr('cx', actor.x + actor.width / 2);\n  circle.attr('cy', actor.y + 10);\n  circle.attr('r', 15);\n  circle.attr('width', actor.width);\n  circle.attr('height', actor.height);\n\n  const bounds = actElem.node().getBBox();\n  actor.height = bounds.height;\n\n  _drawTextCandidateFunc(conf)(\n    actor.description,\n    actElem,\n    rect.x,\n    rect.y + 35,\n    rect.width,\n    rect.height,\n    { class: 'actor' },\n    conf\n  );\n\n  return actor.height;\n};\n\nexport const drawActor = function (elem, actor, conf, isFooter) {\n  switch (actor.type) {\n    case 'actor':\n      return drawActorTypeActor(elem, actor, conf, isFooter);\n    case 'participant':\n      return drawActorTypeParticipant(elem, actor, conf, isFooter);\n  }\n};\n\nexport const drawBox = function (elem, box, conf) {\n  const boxplustextGroup = elem.append('g');\n  const g = boxplustextGroup;\n  drawBackgroundRect(g, box);\n  if (box.name) {\n    _drawTextCandidateFunc(conf)(\n      box.name,\n      g,\n      box.x,\n      box.y + (box.textMaxHeight || 0) / 2,\n      box.width,\n      0,\n      { class: 'text' },\n      conf\n    );\n  }\n  g.lower();\n};\n\nexport const anchorElement = function (elem) {\n  return elem.append('g');\n};\n/**\n * Draws an activation in the diagram\n *\n * @param {any} elem - Element to append activation rect.\n * @param {any} bounds - Activation box bounds.\n * @param {any} verticalPos - Precise y coordinate of bottom activation box edge.\n * @param {any} conf - Sequence diagram config object.\n * @param {any} actorActivations - Number of activations on the actor.\n */\nexport const drawActivation = function (elem, bounds, verticalPos, conf, actorActivations) {\n  const rect = getNoteRect();\n  const g = bounds.anchored;\n  rect.x = bounds.startx;\n  rect.y = bounds.starty;\n  rect.class = 'activation' + (actorActivations % 3); // Will evaluate to 0, 1 or 2\n  rect.width = bounds.stopx - bounds.startx;\n  rect.height = verticalPos - bounds.starty;\n  drawRect(g, rect);\n};\n\n/**\n * Draws a loop in the diagram\n *\n * @param {any} elem - Element to append the loop to.\n * @param {any} loopModel - LoopModel of the given loop.\n * @param {any} labelText - Text within the loop.\n * @param {any} conf - Diagram configuration\n * @returns {any}\n */\nexport const drawLoop = function (elem, loopModel, labelText, conf) {\n  const {\n    boxMargin,\n    boxTextMargin,\n    labelBoxHeight,\n    labelBoxWidth,\n    messageFontFamily: fontFamily,\n    messageFontSize: fontSize,\n    messageFontWeight: fontWeight,\n  } = conf;\n  const g = elem.append('g');\n  const drawLoopLine = function (startx, starty, stopx, stopy) {\n    return g\n      .append('line')\n      .attr('x1', startx)\n      .attr('y1', starty)\n      .attr('x2', stopx)\n      .attr('y2', stopy)\n      .attr('class', 'loopLine');\n  };\n  drawLoopLine(loopModel.startx, loopModel.starty, loopModel.stopx, loopModel.starty);\n  drawLoopLine(loopModel.stopx, loopModel.starty, loopModel.stopx, loopModel.stopy);\n  drawLoopLine(loopModel.startx, loopModel.stopy, loopModel.stopx, loopModel.stopy);\n  drawLoopLine(loopModel.startx, loopModel.starty, loopModel.startx, loopModel.stopy);\n  if (loopModel.sections !== undefined) {\n    loopModel.sections.forEach(function (item) {\n      drawLoopLine(loopModel.startx, item.y, loopModel.stopx, item.y).style(\n        'stroke-dasharray',\n        '3, 3'\n      );\n    });\n  }\n\n  let txt = getTextObj();\n  txt.text = labelText;\n  txt.x = loopModel.startx;\n  txt.y = loopModel.starty;\n  txt.fontFamily = fontFamily;\n  txt.fontSize = fontSize;\n  txt.fontWeight = fontWeight;\n  txt.anchor = 'middle';\n  txt.valign = 'middle';\n  txt.tspan = false;\n  txt.width = labelBoxWidth || 50;\n  txt.height = labelBoxHeight || 20;\n  txt.textMargin = boxTextMargin;\n  txt.class = 'labelText';\n\n  drawLabel(g, txt);\n  txt = getTextObj();\n  txt.text = loopModel.title;\n  txt.x = loopModel.startx + labelBoxWidth / 2 + (loopModel.stopx - loopModel.startx) / 2;\n  txt.y = loopModel.starty + boxMargin + boxTextMargin;\n  txt.anchor = 'middle';\n  txt.valign = 'middle';\n  txt.textMargin = boxTextMargin;\n  txt.class = 'loopText';\n  txt.fontFamily = fontFamily;\n  txt.fontSize = fontSize;\n  txt.fontWeight = fontWeight;\n  txt.wrap = true;\n\n  let textElem = drawText(g, txt);\n\n  if (loopModel.sectionTitles !== undefined) {\n    loopModel.sectionTitles.forEach(function (item, idx) {\n      if (item.message) {\n        txt.text = item.message;\n        txt.x = loopModel.startx + (loopModel.stopx - loopModel.startx) / 2;\n        txt.y = loopModel.sections[idx].y + boxMargin + boxTextMargin;\n        txt.class = 'loopText';\n        txt.anchor = 'middle';\n        txt.valign = 'middle';\n        txt.tspan = false;\n        txt.fontFamily = fontFamily;\n        txt.fontSize = fontSize;\n        txt.fontWeight = fontWeight;\n        txt.wrap = loopModel.wrap;\n        textElem = drawText(g, txt);\n        let sectionHeight = Math.round(\n          textElem\n            .map((te) => (te._groups || te)[0][0].getBBox().height)\n            .reduce((acc, curr) => acc + curr)\n        );\n        loopModel.sections[idx].height += sectionHeight - (boxMargin + boxTextMargin);\n      }\n    });\n  }\n\n  loopModel.height = Math.round(loopModel.stopy - loopModel.starty);\n  return g;\n};\n\n/**\n * Draws a background rectangle\n *\n * @param {any} elem Diagram (reference for bounds)\n * @param {any} bounds Shape of the rectangle\n */\nexport const drawBackgroundRect = function (elem, bounds) {\n  const rectElem = drawRect(elem, {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    stroke: bounds.stroke,\n    class: 'rect',\n  });\n  rectElem.lower();\n};\n\nexport const insertDatabaseIcon = function (elem) {\n  elem\n    .append('defs')\n    .append('symbol')\n    .attr('id', 'database')\n    .attr('fill-rule', 'evenodd')\n    .attr('clip-rule', 'evenodd')\n    .append('path')\n    .attr('transform', 'scale(.5)')\n    .attr(\n      'd',\n      'M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z'\n    );\n};\n\nexport const insertComputerIcon = function (elem) {\n  elem\n    .append('defs')\n    .append('symbol')\n    .attr('id', 'computer')\n    .attr('width', '24')\n    .attr('height', '24')\n    .append('path')\n    .attr('transform', 'scale(.5)')\n    .attr(\n      'd',\n      'M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z'\n    );\n};\n\nexport const insertClockIcon = function (elem) {\n  elem\n    .append('defs')\n    .append('symbol')\n    .attr('id', 'clock')\n    .attr('width', '24')\n    .attr('height', '24')\n    .append('path')\n    .attr('transform', 'scale(.5)')\n    .attr(\n      'd',\n      'M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z'\n    );\n};\n\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n *\n * @param elem\n */\nexport const insertArrowHead = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'arrowhead')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z'); // this is actual shape for arrowhead\n};\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n *\n * @param {any} elem\n */\nexport const insertArrowFilledHead = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'filled-head')\n    .attr('refX', 18)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n};\n/**\n * Setup node number. The result is appended to the svg.\n *\n * @param {any} elem\n */\nexport const insertSequenceNumber = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'sequencenumber')\n    .attr('refX', 15)\n    .attr('refY', 15)\n    .attr('markerWidth', 60)\n    .attr('markerHeight', 40)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', 15)\n    .attr('cy', 15)\n    .attr('r', 6);\n  // .style(\"fill\", '#f00');\n};\n/**\n * Setup cross head and define the marker. The result is appended to the svg.\n *\n * @param {any} elem\n */\nexport const insertArrowCrossHead = function (elem) {\n  const defs = elem.append('defs');\n  const marker = defs\n    .append('marker')\n    .attr('id', 'crosshead')\n    .attr('markerWidth', 15)\n    .attr('markerHeight', 8)\n    .attr('orient', 'auto')\n    .attr('refX', 4)\n    .attr('refY', 5);\n  // The cross\n  marker\n    .append('path')\n    .attr('fill', 'none')\n    .attr('stroke', '#000000')\n    .style('stroke-dasharray', '0, 0')\n    .attr('stroke-width', '1pt')\n    .attr('d', 'M 1,2 L 6,7 M 6,2 L 1,7');\n  // this is actual shape for arrowhead\n};\n\nexport const getTextObj = function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: undefined,\n    anchor: undefined,\n    style: '#666',\n    width: undefined,\n    height: undefined,\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n    tspan: true,\n    valign: undefined,\n  };\n};\n\nexport const getNoteRect = function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: '#EDF2AE',\n    stroke: '#666',\n    width: 100,\n    anchor: 'start',\n    height: 100,\n    rx: 0,\n    ry: 0,\n  };\n};\n\nconst _drawTextCandidateFunc = (function () {\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   */\n  function byText(content, g, x, y, width, height, textAttrs) {\n    const text = g\n      .append('text')\n      .attr('x', x + width / 2)\n      .attr('y', y + height / 2 + 5)\n      .style('text-anchor', 'middle')\n      .text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byTspan(content, g, x, y, width, height, textAttrs, conf) {\n    const { actorFontSize, actorFontFamily, actorFontWeight } = conf;\n\n    const [_actorFontSize, _actorFontSizePx] = parseFontSize(actorFontSize);\n\n    const lines = content.split(common.lineBreakRegex);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * _actorFontSize - (_actorFontSize * (lines.length - 1)) / 2;\n      const text = g\n        .append('text')\n        .attr('x', x + width / 2)\n        .attr('y', y)\n        .style('text-anchor', 'middle')\n        .style('font-size', _actorFontSizePx)\n        .style('font-weight', actorFontWeight)\n        .style('font-family', actorFontFamily);\n      text\n        .append('tspan')\n        .attr('x', x + width / 2)\n        .attr('dy', dy)\n        .text(lines[i]);\n\n      text\n        .attr('y', y + height / 2.0)\n        .attr('dominant-baseline', 'central')\n        .attr('alignment-baseline', 'central');\n\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const s = g.append('switch');\n    const f = s\n      .append('foreignObject')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('width', width)\n      .attr('height', height);\n\n    const text = f\n      .append('xhtml:div')\n      .style('display', 'table')\n      .style('height', '100%')\n      .style('width', '100%');\n\n    text\n      .append('div')\n      .style('display', 'table-cell')\n      .style('text-align', 'center')\n      .style('vertical-align', 'middle')\n      .text(content);\n\n    byTspan(content, s, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} toText\n   * @param {any} fromTextAttrsDict\n   */\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (fromTextAttrsDict.hasOwnProperty(key)) {\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n\n  return function (conf) {\n    return conf.textPlacement === 'fo' ? byFo : conf.textPlacement === 'old' ? byText : byTspan;\n  };\n})();\n\nconst _drawMenuItemTextCandidateFunc = (function () {\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   */\n  function byText(content, g, x, y, width, height, textAttrs) {\n    const text = g\n      .append('text')\n      .attr('x', x)\n      .attr('y', y)\n      .style('text-anchor', 'start')\n      .text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byTspan(content, g, x, y, width, height, textAttrs, conf) {\n    const { actorFontSize, actorFontFamily, actorFontWeight } = conf;\n\n    const lines = content.split(common.lineBreakRegex);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * actorFontSize - (actorFontSize * (lines.length - 1)) / 2;\n      const text = g\n        .append('text')\n        .attr('x', x)\n        .attr('y', y)\n        .style('text-anchor', 'start')\n        .style('font-size', actorFontSize)\n        .style('font-weight', actorFontWeight)\n        .style('font-family', actorFontFamily);\n      text.append('tspan').attr('x', x).attr('dy', dy).text(lines[i]);\n\n      text\n        .attr('y', y + height / 2.0)\n        .attr('dominant-baseline', 'central')\n        .attr('alignment-baseline', 'central');\n\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const s = g.append('switch');\n    const f = s\n      .append('foreignObject')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('width', width)\n      .attr('height', height);\n\n    const text = f\n      .append('xhtml:div')\n      .style('display', 'table')\n      .style('height', '100%')\n      .style('width', '100%');\n\n    text\n      .append('div')\n      .style('display', 'table-cell')\n      .style('text-align', 'center')\n      .style('vertical-align', 'middle')\n      .text(content);\n\n    byTspan(content, s, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} toText\n   * @param {any} fromTextAttrsDict\n   */\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (fromTextAttrsDict.hasOwnProperty(key)) {\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n\n  return function (conf) {\n    return conf.textPlacement === 'fo' ? byFo : conf.textPlacement === 'old' ? byText : byTspan;\n  };\n})();\n\nexport default {\n  drawRect,\n  drawText,\n  drawLabel,\n  drawActor,\n  drawBox,\n  drawPopup,\n  drawImage,\n  drawEmbeddedImage,\n  anchorElement,\n  drawActivation,\n  drawLoop,\n  drawBackgroundRect,\n  insertArrowHead,\n  insertArrowFilledHead,\n  insertSequenceNumber,\n  insertArrowCrossHead,\n  insertDatabaseIcon,\n  insertComputerIcon,\n  insertClockIcon,\n  getTextObj,\n  getNoteRect,\n  popupMenu,\n  popdownMenu,\n  fixLifeLineHeights,\n  sanitizeUrl,\n};\n","// @ts-nocheck TODO: fix file\nimport { select, selectAll } from 'd3';\nimport svgDraw, { drawText, fixLifeLineHeights } from './svgDraw';\nimport { log } from '../../logger';\nimport common from '../common/common';\nimport * as configApi from '../../config';\nimport assignWithDepth from '../../assignWithDepth';\nimport utils from '../../utils';\nimport { configureSvgSize } from '../../setupGraphViewbox';\nimport { Diagram } from '../../Diagram';\n\nlet conf = {};\n\nexport const bounds = {\n  data: {\n    startx: undefined,\n    stopx: undefined,\n    starty: undefined,\n    stopy: undefined,\n  },\n  verticalPos: 0,\n  sequenceItems: [],\n  activations: [],\n  models: {\n    getHeight: function () {\n      return (\n        Math.max.apply(\n          null,\n          this.actors.length === 0 ? [0] : this.actors.map((actor) => actor.height || 0)\n        ) +\n        (this.loops.length === 0\n          ? 0\n          : this.loops.map((it) => it.height || 0).reduce((acc, h) => acc + h)) +\n        (this.messages.length === 0\n          ? 0\n          : this.messages.map((it) => it.height || 0).reduce((acc, h) => acc + h)) +\n        (this.notes.length === 0\n          ? 0\n          : this.notes.map((it) => it.height || 0).reduce((acc, h) => acc + h))\n      );\n    },\n    clear: function () {\n      this.actors = [];\n      this.boxes = [];\n      this.loops = [];\n      this.messages = [];\n      this.notes = [];\n    },\n    addBox: function (boxModel) {\n      this.boxes.push(boxModel);\n    },\n    addActor: function (actorModel) {\n      this.actors.push(actorModel);\n    },\n    addLoop: function (loopModel) {\n      this.loops.push(loopModel);\n    },\n    addMessage: function (msgModel) {\n      this.messages.push(msgModel);\n    },\n    addNote: function (noteModel) {\n      this.notes.push(noteModel);\n    },\n    lastActor: function () {\n      return this.actors[this.actors.length - 1];\n    },\n    lastLoop: function () {\n      return this.loops[this.loops.length - 1];\n    },\n    lastMessage: function () {\n      return this.messages[this.messages.length - 1];\n    },\n    lastNote: function () {\n      return this.notes[this.notes.length - 1];\n    },\n    actors: [],\n    boxes: [],\n    loops: [],\n    messages: [],\n    notes: [],\n  },\n  init: function () {\n    this.sequenceItems = [];\n    this.activations = [];\n    this.models.clear();\n    this.data = {\n      startx: undefined,\n      stopx: undefined,\n      starty: undefined,\n      stopy: undefined,\n    };\n    this.verticalPos = 0;\n    setConf(configApi.getConfig());\n  },\n  updateVal: function (obj, key, val, fun) {\n    if (obj[key] === undefined) {\n      obj[key] = val;\n    } else {\n      obj[key] = fun(val, obj[key]);\n    }\n  },\n  updateBounds: function (startx, starty, stopx, stopy) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const _self = this;\n    let cnt = 0;\n    /** @param type - Either `activation` or `undefined` */\n    function updateFn(type?: 'activation') {\n      return function updateItemBounds(item) {\n        cnt++;\n        // The loop sequenceItems is a stack so the biggest margins in the beginning of the sequenceItems\n        const n = _self.sequenceItems.length - cnt + 1;\n\n        _self.updateVal(item, 'starty', starty - n * conf.boxMargin, Math.min);\n        _self.updateVal(item, 'stopy', stopy + n * conf.boxMargin, Math.max);\n\n        _self.updateVal(bounds.data, 'startx', startx - n * conf.boxMargin, Math.min);\n        _self.updateVal(bounds.data, 'stopx', stopx + n * conf.boxMargin, Math.max);\n\n        if (!(type === 'activation')) {\n          _self.updateVal(item, 'startx', startx - n * conf.boxMargin, Math.min);\n          _self.updateVal(item, 'stopx', stopx + n * conf.boxMargin, Math.max);\n\n          _self.updateVal(bounds.data, 'starty', starty - n * conf.boxMargin, Math.min);\n          _self.updateVal(bounds.data, 'stopy', stopy + n * conf.boxMargin, Math.max);\n        }\n      };\n    }\n\n    this.sequenceItems.forEach(updateFn());\n    this.activations.forEach(updateFn('activation'));\n  },\n  insert: function (startx, starty, stopx, stopy) {\n    const _startx = Math.min(startx, stopx);\n    const _stopx = Math.max(startx, stopx);\n    const _starty = Math.min(starty, stopy);\n    const _stopy = Math.max(starty, stopy);\n\n    this.updateVal(bounds.data, 'startx', _startx, Math.min);\n    this.updateVal(bounds.data, 'starty', _starty, Math.min);\n    this.updateVal(bounds.data, 'stopx', _stopx, Math.max);\n    this.updateVal(bounds.data, 'stopy', _stopy, Math.max);\n\n    this.updateBounds(_startx, _starty, _stopx, _stopy);\n  },\n  newActivation: function (message, diagram, actors) {\n    const actorRect = actors[message.from.actor];\n    const stackedSize = actorActivations(message.from.actor).length || 0;\n    const x = actorRect.x + actorRect.width / 2 + ((stackedSize - 1) * conf.activationWidth) / 2;\n    this.activations.push({\n      startx: x,\n      starty: this.verticalPos + 2,\n      stopx: x + conf.activationWidth,\n      stopy: undefined,\n      actor: message.from.actor,\n      anchored: svgDraw.anchorElement(diagram),\n    });\n  },\n  endActivation: function (message) {\n    // find most recent activation for given actor\n    const lastActorActivationIdx = this.activations\n      .map(function (activation) {\n        return activation.actor;\n      })\n      .lastIndexOf(message.from.actor);\n    return this.activations.splice(lastActorActivationIdx, 1)[0];\n  },\n  createLoop: function (title = { message: undefined, wrap: false, width: undefined }, fill) {\n    return {\n      startx: undefined,\n      starty: this.verticalPos,\n      stopx: undefined,\n      stopy: undefined,\n      title: title.message,\n      wrap: title.wrap,\n      width: title.width,\n      height: 0,\n      fill: fill,\n    };\n  },\n  newLoop: function (title = { message: undefined, wrap: false, width: undefined }, fill) {\n    this.sequenceItems.push(this.createLoop(title, fill));\n  },\n  endLoop: function () {\n    return this.sequenceItems.pop();\n  },\n  addSectionToLoop: function (message) {\n    const loop = this.sequenceItems.pop();\n    loop.sections = loop.sections || [];\n    loop.sectionTitles = loop.sectionTitles || [];\n    loop.sections.push({ y: bounds.getVerticalPos(), height: 0 });\n    loop.sectionTitles.push(message);\n    this.sequenceItems.push(loop);\n  },\n  bumpVerticalPos: function (bump) {\n    this.verticalPos = this.verticalPos + bump;\n    this.data.stopy = this.verticalPos;\n  },\n  getVerticalPos: function () {\n    return this.verticalPos;\n  },\n  getBounds: function () {\n    return { bounds: this.data, models: this.models };\n  },\n};\n\n/** Options for drawing a note in {@link drawNote} */\ninterface NoteModel {\n  /** x axis start position */\n  startx: number;\n  /** y axis position */\n  starty: number;\n  /** the message to be shown */\n  message: string;\n  /** Set this with a custom width to override the default configured width. */\n  width: number;\n}\n\n/**\n * Draws an note in the diagram with the attached line\n *\n * @param elem - The diagram to draw to.\n * @param noteModel - Note model options.\n */\nconst drawNote = function (elem: any, noteModel: NoteModel) {\n  bounds.bumpVerticalPos(conf.boxMargin);\n  noteModel.height = conf.boxMargin;\n  noteModel.starty = bounds.getVerticalPos();\n  const rect = svgDraw.getNoteRect();\n  rect.x = noteModel.startx;\n  rect.y = noteModel.starty;\n  rect.width = noteModel.width || conf.width;\n  rect.class = 'note';\n\n  const g = elem.append('g');\n  const rectElem = svgDraw.drawRect(g, rect);\n  const textObj = svgDraw.getTextObj();\n  textObj.x = noteModel.startx;\n  textObj.y = noteModel.starty;\n  textObj.width = rect.width;\n  textObj.dy = '1em';\n  textObj.text = noteModel.message;\n  textObj.class = 'noteText';\n  textObj.fontFamily = conf.noteFontFamily;\n  textObj.fontSize = conf.noteFontSize;\n  textObj.fontWeight = conf.noteFontWeight;\n  textObj.anchor = conf.noteAlign;\n  textObj.textMargin = conf.noteMargin;\n  textObj.valign = 'center';\n\n  const textElem = drawText(g, textObj);\n\n  const textHeight = Math.round(\n    textElem\n      .map((te) => (te._groups || te)[0][0].getBBox().height)\n      .reduce((acc, curr) => acc + curr)\n  );\n\n  rectElem.attr('height', textHeight + 2 * conf.noteMargin);\n  noteModel.height += textHeight + 2 * conf.noteMargin;\n  bounds.bumpVerticalPos(textHeight + 2 * conf.noteMargin);\n  noteModel.stopy = noteModel.starty + textHeight + 2 * conf.noteMargin;\n  noteModel.stopx = noteModel.startx + rect.width;\n  bounds.insert(noteModel.startx, noteModel.starty, noteModel.stopx, noteModel.stopy);\n  bounds.models.addNote(noteModel);\n};\n\nconst messageFont = (cnf) => {\n  return {\n    fontFamily: cnf.messageFontFamily,\n    fontSize: cnf.messageFontSize,\n    fontWeight: cnf.messageFontWeight,\n  };\n};\nconst noteFont = (cnf) => {\n  return {\n    fontFamily: cnf.noteFontFamily,\n    fontSize: cnf.noteFontSize,\n    fontWeight: cnf.noteFontWeight,\n  };\n};\nconst actorFont = (cnf) => {\n  return {\n    fontFamily: cnf.actorFontFamily,\n    fontSize: cnf.actorFontSize,\n    fontWeight: cnf.actorFontWeight,\n  };\n};\n\n/**\n * Process a message by adding its dimensions to the bound. It returns the Y coordinate of the\n * message so it can be drawn later. We do not draw the message at this point so the arrowhead can\n * be on top of the activation box.\n *\n * @param _diagram - The parent of the message element.\n * @param msgModel - The model containing fields describing a message\n * @returns `lineStartY` - The Y coordinate at which the message line starts\n */\nfunction boundMessage(_diagram, msgModel): number {\n  bounds.bumpVerticalPos(10);\n  const { startx, stopx, message } = msgModel;\n  const lines = common.splitBreaks(message).length;\n  const textDims = utils.calculateTextDimensions(message, messageFont(conf));\n  const lineHeight = textDims.height / lines;\n  msgModel.height += lineHeight;\n\n  bounds.bumpVerticalPos(lineHeight);\n\n  let lineStartY;\n  let totalOffset = textDims.height - 10;\n  const textWidth = textDims.width;\n\n  if (startx === stopx) {\n    lineStartY = bounds.getVerticalPos() + totalOffset;\n    if (!conf.rightAngles) {\n      totalOffset += conf.boxMargin;\n      lineStartY = bounds.getVerticalPos() + totalOffset;\n    }\n    totalOffset += 30;\n    const dx = Math.max(textWidth / 2, conf.width / 2);\n    bounds.insert(\n      startx - dx,\n      bounds.getVerticalPos() - 10 + totalOffset,\n      stopx + dx,\n      bounds.getVerticalPos() + 30 + totalOffset\n    );\n  } else {\n    totalOffset += conf.boxMargin;\n    lineStartY = bounds.getVerticalPos() + totalOffset;\n    bounds.insert(startx, lineStartY - 10, stopx, lineStartY);\n  }\n  bounds.bumpVerticalPos(totalOffset);\n  msgModel.height += totalOffset;\n  msgModel.stopy = msgModel.starty + msgModel.height;\n  bounds.insert(msgModel.fromBounds, msgModel.starty, msgModel.toBounds, msgModel.stopy);\n\n  return lineStartY;\n}\n\n/**\n * Draws a message. Note that the bounds have previously been updated by boundMessage.\n *\n * @param diagram - The parent of the message element\n * @param msgModel - The model containing fields describing a message\n * @param lineStartY - The Y coordinate at which the message line starts\n * @param diagObj - The diagram object.\n */\nconst drawMessage = function (diagram, msgModel, lineStartY: number, diagObj: Diagram) {\n  const { startx, stopx, starty, message, type, sequenceIndex, sequenceVisible } = msgModel;\n  const textDims = utils.calculateTextDimensions(message, messageFont(conf));\n  const textObj = svgDraw.getTextObj();\n  textObj.x = startx;\n  textObj.y = starty + 10;\n  textObj.width = stopx - startx;\n  textObj.class = 'messageText';\n  textObj.dy = '1em';\n  textObj.text = message;\n  textObj.fontFamily = conf.messageFontFamily;\n  textObj.fontSize = conf.messageFontSize;\n  textObj.fontWeight = conf.messageFontWeight;\n  textObj.anchor = conf.messageAlign;\n  textObj.valign = 'center';\n  textObj.textMargin = conf.wrapPadding;\n  textObj.tspan = false;\n\n  drawText(diagram, textObj);\n\n  const textWidth = textDims.width;\n\n  let line;\n  if (startx === stopx) {\n    if (conf.rightAngles) {\n      line = diagram\n        .append('path')\n        .attr(\n          'd',\n          `M  ${startx},${lineStartY} H ${startx + Math.max(conf.width / 2, textWidth / 2)} V ${\n            lineStartY + 25\n          } H ${startx}`\n        );\n    } else {\n      line = diagram\n        .append('path')\n        .attr(\n          'd',\n          'M ' +\n            startx +\n            ',' +\n            lineStartY +\n            ' C ' +\n            (startx + 60) +\n            ',' +\n            (lineStartY - 10) +\n            ' ' +\n            (startx + 60) +\n            ',' +\n            (lineStartY + 30) +\n            ' ' +\n            startx +\n            ',' +\n            (lineStartY + 20)\n        );\n    }\n  } else {\n    line = diagram.append('line');\n    line.attr('x1', startx);\n    line.attr('y1', lineStartY);\n    line.attr('x2', stopx);\n    line.attr('y2', lineStartY);\n  }\n  // Make an SVG Container\n  // Draw the line\n  if (\n    type === diagObj.db.LINETYPE.DOTTED ||\n    type === diagObj.db.LINETYPE.DOTTED_CROSS ||\n    type === diagObj.db.LINETYPE.DOTTED_POINT ||\n    type === diagObj.db.LINETYPE.DOTTED_OPEN\n  ) {\n    line.style('stroke-dasharray', '3, 3');\n    line.attr('class', 'messageLine1');\n  } else {\n    line.attr('class', 'messageLine0');\n  }\n\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  line.attr('stroke-width', 2);\n  line.attr('stroke', 'none'); // handled by theme/css anyway\n  line.style('fill', 'none'); // remove any fill colour\n  if (type === diagObj.db.LINETYPE.SOLID || type === diagObj.db.LINETYPE.DOTTED) {\n    line.attr('marker-end', 'url(' + url + '#arrowhead)');\n  }\n  if (type === diagObj.db.LINETYPE.SOLID_POINT || type === diagObj.db.LINETYPE.DOTTED_POINT) {\n    line.attr('marker-end', 'url(' + url + '#filled-head)');\n  }\n\n  if (type === diagObj.db.LINETYPE.SOLID_CROSS || type === diagObj.db.LINETYPE.DOTTED_CROSS) {\n    line.attr('marker-end', 'url(' + url + '#crosshead)');\n  }\n\n  // add node number\n  if (sequenceVisible || conf.showSequenceNumbers) {\n    line.attr('marker-start', 'url(' + url + '#sequencenumber)');\n    diagram\n      .append('text')\n      .attr('x', startx)\n      .attr('y', lineStartY + 4)\n      .attr('font-family', 'sans-serif')\n      .attr('font-size', '12px')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'sequenceNumber')\n      .text(sequenceIndex);\n  }\n};\n\nexport const drawActors = function (\n  diagram,\n  actors,\n  actorKeys,\n  verticalPos,\n  configuration,\n  messages,\n  isFooter\n) {\n  if (configuration.hideUnusedParticipants === true) {\n    const newActors = new Set();\n    messages.forEach((message) => {\n      newActors.add(message.from);\n      newActors.add(message.to);\n    });\n    actorKeys = actorKeys.filter((actorKey) => newActors.has(actorKey));\n  }\n\n  // Draw the actors\n  let prevWidth = 0;\n  let prevMargin = 0;\n  let maxHeight = 0;\n  let prevBox = undefined;\n\n  for (const actorKey of actorKeys) {\n    const actor = actors[actorKey];\n    const box = actor.box;\n\n    // end of box\n    if (prevBox && prevBox != box) {\n      if (!isFooter) {\n        bounds.models.addBox(prevBox);\n      }\n      prevMargin += conf.boxMargin + prevBox.margin;\n    }\n\n    // new box\n    if (box && box != prevBox) {\n      if (!isFooter) {\n        box.x = prevWidth + prevMargin;\n        box.y = verticalPos;\n      }\n      prevMargin += box.margin;\n    }\n\n    // Add some rendering data to the object\n    actor.width = actor.width || conf.width;\n    actor.height = Math.max(actor.height || conf.height, conf.height);\n    actor.margin = actor.margin || conf.actorMargin;\n\n    actor.x = prevWidth + prevMargin;\n    actor.y = bounds.getVerticalPos();\n\n    // Draw the box with the attached line\n    const height = svgDraw.drawActor(diagram, actor, conf, isFooter);\n    maxHeight = Math.max(maxHeight, height);\n    bounds.insert(actor.x, verticalPos, actor.x + actor.width, actor.height);\n\n    prevWidth += actor.width + prevMargin;\n    if (actor.box) {\n      actor.box.width = prevWidth + box.margin - actor.box.x;\n    }\n    prevMargin = actor.margin;\n    prevBox = actor.box;\n    bounds.models.addActor(actor);\n  }\n\n  // end of box\n  if (prevBox && !isFooter) {\n    bounds.models.addBox(prevBox);\n  }\n\n  // Add a margin between the actor boxes and the first arrow\n  bounds.bumpVerticalPos(maxHeight);\n};\n\nexport const drawActorsPopup = function (diagram, actors, actorKeys, doc) {\n  let maxHeight = 0;\n  let maxWidth = 0;\n  for (const actorKey of actorKeys) {\n    const actor = actors[actorKey];\n    const minMenuWidth = getRequiredPopupWidth(actor);\n    const menuDimensions = svgDraw.drawPopup(\n      diagram,\n      actor,\n      minMenuWidth,\n      conf,\n      conf.forceMenus,\n      doc\n    );\n    if (menuDimensions.height > maxHeight) {\n      maxHeight = menuDimensions.height;\n    }\n    if (menuDimensions.width + actor.x > maxWidth) {\n      maxWidth = menuDimensions.width + actor.x;\n    }\n  }\n\n  return { maxHeight: maxHeight, maxWidth: maxWidth };\n};\n\nexport const setConf = function (cnf) {\n  assignWithDepth(conf, cnf);\n\n  if (cnf.fontFamily) {\n    conf.actorFontFamily = conf.noteFontFamily = conf.messageFontFamily = cnf.fontFamily;\n  }\n  if (cnf.fontSize) {\n    conf.actorFontSize = conf.noteFontSize = conf.messageFontSize = cnf.fontSize;\n  }\n  if (cnf.fontWeight) {\n    conf.actorFontWeight = conf.noteFontWeight = conf.messageFontWeight = cnf.fontWeight;\n  }\n};\n\nconst actorActivations = function (actor) {\n  return bounds.activations.filter(function (activation) {\n    return activation.actor === actor;\n  });\n};\n\nconst activationBounds = function (actor, actors) {\n  // handle multiple stacked activations for same actor\n  const actorObj = actors[actor];\n  const activations = actorActivations(actor);\n\n  const left = activations.reduce(function (acc, activation) {\n    return Math.min(acc, activation.startx);\n  }, actorObj.x + actorObj.width / 2);\n  const right = activations.reduce(function (acc, activation) {\n    return Math.max(acc, activation.stopx);\n  }, actorObj.x + actorObj.width / 2);\n  return [left, right];\n};\n\nfunction adjustLoopHeightForWrap(loopWidths, msg, preMargin, postMargin, addLoopFn) {\n  bounds.bumpVerticalPos(preMargin);\n  let heightAdjust = postMargin;\n  if (msg.id && msg.message && loopWidths[msg.id]) {\n    const loopWidth = loopWidths[msg.id].width;\n    const textConf = messageFont(conf);\n    msg.message = utils.wrapLabel(`[${msg.message}]`, loopWidth - 2 * conf.wrapPadding, textConf);\n    msg.width = loopWidth;\n    msg.wrap = true;\n\n    // const lines = common.splitBreaks(msg.message).length;\n    const textDims = utils.calculateTextDimensions(msg.message, textConf);\n    const totalOffset = Math.max(textDims.height, conf.labelBoxHeight);\n    heightAdjust = postMargin + totalOffset;\n    log.debug(`${totalOffset} - ${msg.message}`);\n  }\n  addLoopFn(msg);\n  bounds.bumpVerticalPos(heightAdjust);\n}\n\n/**\n * Draws a sequenceDiagram in the tag with id: id based on the graph definition in text.\n *\n * @param _text - The text of the diagram\n * @param id - The id of the diagram which will be used as a DOM element id¨\n * @param _version - Mermaid version from package.json\n * @param diagObj - A standard diagram containing the db and the text and type etc of the diagram\n */\nexport const draw = function (_text: string, id: string, _version: string, diagObj: Diagram) {\n  const { securityLevel, sequence } = configApi.getConfig();\n  conf = sequence;\n  diagObj.db.clear();\n  // Parse the graph definition\n  diagObj.parser.parse(_text);\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n  bounds.init();\n  log.debug(diagObj.db);\n\n  const diagram =\n    securityLevel === 'sandbox' ? root.select(`[id=\"${id}\"]`) : select(`[id=\"${id}\"]`);\n\n  // Fetch data from the parsing\n  const actors = diagObj.db.getActors();\n  const boxes = diagObj.db.getBoxes();\n  const actorKeys = diagObj.db.getActorKeys();\n  const messages = diagObj.db.getMessages();\n  const title = diagObj.db.getDiagramTitle();\n  const hasBoxes = diagObj.db.hasAtLeastOneBox();\n  const hasBoxTitles = diagObj.db.hasAtLeastOneBoxWithTitle();\n  const maxMessageWidthPerActor = getMaxMessageWidthPerActor(actors, messages, diagObj);\n  conf.height = calculateActorMargins(actors, maxMessageWidthPerActor, boxes);\n\n  svgDraw.insertComputerIcon(diagram);\n  svgDraw.insertDatabaseIcon(diagram);\n  svgDraw.insertClockIcon(diagram);\n\n  if (hasBoxes) {\n    bounds.bumpVerticalPos(conf.boxMargin);\n    if (hasBoxTitles) {\n      bounds.bumpVerticalPos(boxes[0].textMaxHeight);\n    }\n  }\n\n  drawActors(diagram, actors, actorKeys, 0, conf, messages, false);\n  const loopWidths = calculateLoopBounds(messages, actors, maxMessageWidthPerActor, diagObj);\n\n  // The arrow head definition is attached to the svg once\n  svgDraw.insertArrowHead(diagram);\n  svgDraw.insertArrowCrossHead(diagram);\n  svgDraw.insertArrowFilledHead(diagram);\n  svgDraw.insertSequenceNumber(diagram);\n\n  /**\n   * @param msg - The message to draw.\n   * @param verticalPos - The vertical position of the message.\n   */\n  function activeEnd(msg: any, verticalPos: number) {\n    const activationData = bounds.endActivation(msg);\n    if (activationData.starty + 18 > verticalPos) {\n      activationData.starty = verticalPos - 6;\n      verticalPos += 12;\n    }\n    svgDraw.drawActivation(\n      diagram,\n      activationData,\n      verticalPos,\n      conf,\n      actorActivations(msg.from.actor).length\n    );\n\n    bounds.insert(activationData.startx, verticalPos - 10, activationData.stopx, verticalPos);\n  }\n\n  // Draw the messages/signals\n  let sequenceIndex = 1;\n  let sequenceIndexStep = 1;\n  const messagesToDraw = [];\n  messages.forEach(function (msg) {\n    let loopModel, noteModel, msgModel;\n\n    switch (msg.type) {\n      case diagObj.db.LINETYPE.NOTE:\n        noteModel = msg.noteModel;\n        drawNote(diagram, noteModel);\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_START:\n        bounds.newActivation(msg, diagram, actors);\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_END:\n        activeEnd(msg, bounds.getVerticalPos());\n        break;\n      case diagObj.db.LINETYPE.LOOP_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.LOOP_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'loop', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.RECT_START:\n        adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin, conf.boxMargin, (message) =>\n          bounds.newLoop(undefined, message.message)\n        );\n        break;\n      case diagObj.db.LINETYPE.RECT_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawBackgroundRect(diagram, loopModel);\n        bounds.models.addLoop(loopModel);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        break;\n      case diagObj.db.LINETYPE.OPT_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.OPT_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'opt', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.ALT_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.ALT_ELSE:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.ALT_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'alt', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.PAR_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.PAR_AND:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.PAR_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'par', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.AUTONUMBER:\n        sequenceIndex = msg.message.start || sequenceIndex;\n        sequenceIndexStep = msg.message.step || sequenceIndexStep;\n        if (msg.message.visible) {\n          diagObj.db.enableSequenceNumbers();\n        } else {\n          diagObj.db.disableSequenceNumbers();\n        }\n        break;\n      case diagObj.db.LINETYPE.CRITICAL_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.CRITICAL_OPTION:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.CRITICAL_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'critical', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.BREAK_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.BREAK_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'break', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      default:\n        try {\n          // lastMsg = msg\n          msgModel = msg.msgModel;\n          msgModel.starty = bounds.getVerticalPos();\n          msgModel.sequenceIndex = sequenceIndex;\n          msgModel.sequenceVisible = diagObj.db.showSequenceNumbers();\n          const lineStartY = boundMessage(diagram, msgModel);\n          messagesToDraw.push({ messageModel: msgModel, lineStartY: lineStartY });\n          bounds.models.addMessage(msgModel);\n        } catch (e) {\n          log.error('error while drawing message', e);\n        }\n    }\n\n    // Increment sequence counter if msg.type is a line (and not another event like activation or note, etc)\n    if (\n      [\n        diagObj.db.LINETYPE.SOLID_OPEN,\n        diagObj.db.LINETYPE.DOTTED_OPEN,\n        diagObj.db.LINETYPE.SOLID,\n        diagObj.db.LINETYPE.DOTTED,\n        diagObj.db.LINETYPE.SOLID_CROSS,\n        diagObj.db.LINETYPE.DOTTED_CROSS,\n        diagObj.db.LINETYPE.SOLID_POINT,\n        diagObj.db.LINETYPE.DOTTED_POINT,\n      ].includes(msg.type)\n    ) {\n      sequenceIndex = sequenceIndex + sequenceIndexStep;\n    }\n  });\n\n  messagesToDraw.forEach((e) => drawMessage(diagram, e.messageModel, e.lineStartY, diagObj));\n\n  if (conf.mirrorActors) {\n    // Draw actors below diagram\n    bounds.bumpVerticalPos(conf.boxMargin * 2);\n    drawActors(diagram, actors, actorKeys, bounds.getVerticalPos(), conf, messages, true);\n    bounds.bumpVerticalPos(conf.boxMargin);\n    fixLifeLineHeights(diagram, bounds.getVerticalPos());\n  }\n\n  bounds.models.boxes.forEach(function (box) {\n    box.height = bounds.getVerticalPos() - box.y;\n    bounds.insert(box.x, box.y, box.x + box.width, box.height);\n    box.startx = box.x;\n    box.starty = box.y;\n    box.stopx = box.startx + box.width;\n    box.stopy = box.starty + box.height;\n    box.stroke = 'rgb(0,0,0, 0.5)';\n    svgDraw.drawBox(diagram, box, conf);\n  });\n\n  if (hasBoxes) {\n    bounds.bumpVerticalPos(conf.boxMargin);\n  }\n\n  // only draw popups for the top row of actors.\n  const requiredBoxSize = drawActorsPopup(diagram, actors, actorKeys, doc);\n\n  const { bounds: box } = bounds.getBounds();\n\n  // Adjust line height of actor lines now that the height of the diagram is known\n  log.debug('For line height fix Querying: #' + id + ' .actor-line');\n  const actorLines = selectAll('#' + id + ' .actor-line');\n  actorLines.attr('y2', box.stopy);\n\n  // Make sure the height of the diagram supports long menus.\n  let boxHeight = box.stopy - box.starty;\n  if (boxHeight < requiredBoxSize.maxHeight) {\n    boxHeight = requiredBoxSize.maxHeight;\n  }\n\n  let height = boxHeight + 2 * conf.diagramMarginY;\n  if (conf.mirrorActors) {\n    height = height - conf.boxMargin + conf.bottomMarginAdj;\n  }\n\n  // Make sure the width of the diagram supports wide menus.\n  let boxWidth = box.stopx - box.startx;\n  if (boxWidth < requiredBoxSize.maxWidth) {\n    boxWidth = requiredBoxSize.maxWidth;\n  }\n  const width = boxWidth + 2 * conf.diagramMarginX;\n\n  if (title) {\n    diagram\n      .append('text')\n      .text(title)\n      .attr('x', (box.stopx - box.startx) / 2 - 2 * conf.diagramMarginX)\n      .attr('y', -25);\n  }\n\n  configureSvgSize(diagram, height, width, conf.useMaxWidth);\n\n  const extraVertForTitle = title ? 40 : 0;\n  diagram.attr(\n    'viewBox',\n    box.startx -\n      conf.diagramMarginX +\n      ' -' +\n      (conf.diagramMarginY + extraVertForTitle) +\n      ' ' +\n      width +\n      ' ' +\n      (height + extraVertForTitle)\n  );\n\n  log.debug(`models:`, bounds.models);\n};\n\n/**\n * Retrieves the max message width of each actor, supports signals (messages, loops) and notes.\n *\n * It will enumerate each given message, and will determine its text width, in relation to the actor\n * it originates from, and destined to.\n *\n * @param actors - The actors map\n * @param messages - A list of message objects to iterate\n * @param diagObj - The diagram object.\n * @returns The max message width of each actor.\n */\nfunction getMaxMessageWidthPerActor(\n  actors: { [id: string]: any },\n  messages: any[],\n  diagObj: Diagram\n): { [id: string]: number } {\n  const maxMessageWidthPerActor = {};\n\n  messages.forEach(function (msg) {\n    if (actors[msg.to] && actors[msg.from]) {\n      const actor = actors[msg.to];\n\n      // If this is the first actor, and the message is left of it, no need to calculate the margin\n      if (msg.placement === diagObj.db.PLACEMENT.LEFTOF && !actor.prevActor) {\n        return;\n      }\n\n      // If this is the last actor, and the message is right of it, no need to calculate the margin\n      if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF && !actor.nextActor) {\n        return;\n      }\n\n      const isNote = msg.placement !== undefined;\n      const isMessage = !isNote;\n\n      const textFont = isNote ? noteFont(conf) : messageFont(conf);\n      const wrappedMessage = msg.wrap\n        ? utils.wrapLabel(msg.message, conf.width - 2 * conf.wrapPadding, textFont)\n        : msg.message;\n      const messageDimensions = utils.calculateTextDimensions(wrappedMessage, textFont);\n      const messageWidth = messageDimensions.width + 2 * conf.wrapPadding;\n\n      /*\n       * The following scenarios should be supported:\n       *\n       * - There's a message (non-note) between fromActor and toActor\n       *   - If fromActor is on the right and toActor is on the left, we should\n       *     define the toActor's margin\n       *   - If fromActor is on the left and toActor is on the right, we should\n       *     define the fromActor's margin\n       * - There's a note, in which case fromActor == toActor\n       *   - If the note is to the left of the actor, we should define the previous actor\n       *     margin\n       *   - If the note is on the actor, we should define both the previous and next actor\n       *     margins, each being the half of the note size\n       *   - If the note is on the right of the actor, we should define the current actor\n       *     margin\n       */\n      if (isMessage && msg.from === actor.nextActor) {\n        maxMessageWidthPerActor[msg.to] = Math.max(\n          maxMessageWidthPerActor[msg.to] || 0,\n          messageWidth\n        );\n      } else if (isMessage && msg.from === actor.prevActor) {\n        maxMessageWidthPerActor[msg.from] = Math.max(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth\n        );\n      } else if (isMessage && msg.from === msg.to) {\n        maxMessageWidthPerActor[msg.from] = Math.max(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth / 2\n        );\n\n        maxMessageWidthPerActor[msg.to] = Math.max(\n          maxMessageWidthPerActor[msg.to] || 0,\n          messageWidth / 2\n        );\n      } else if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF) {\n        maxMessageWidthPerActor[msg.from] = Math.max(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth\n        );\n      } else if (msg.placement === diagObj.db.PLACEMENT.LEFTOF) {\n        maxMessageWidthPerActor[actor.prevActor] = Math.max(\n          maxMessageWidthPerActor[actor.prevActor] || 0,\n          messageWidth\n        );\n      } else if (msg.placement === diagObj.db.PLACEMENT.OVER) {\n        if (actor.prevActor) {\n          maxMessageWidthPerActor[actor.prevActor] = Math.max(\n            maxMessageWidthPerActor[actor.prevActor] || 0,\n            messageWidth / 2\n          );\n        }\n\n        if (actor.nextActor) {\n          maxMessageWidthPerActor[msg.from] = Math.max(\n            maxMessageWidthPerActor[msg.from] || 0,\n            messageWidth / 2\n          );\n        }\n      }\n    }\n  });\n\n  log.debug('maxMessageWidthPerActor:', maxMessageWidthPerActor);\n  return maxMessageWidthPerActor;\n}\n\nconst getRequiredPopupWidth = function (actor) {\n  let requiredPopupWidth = 0;\n  const textFont = actorFont(conf);\n  for (const key in actor.links) {\n    const labelDimensions = utils.calculateTextDimensions(key, textFont);\n    const labelWidth = labelDimensions.width + 2 * conf.wrapPadding + 2 * conf.boxMargin;\n    if (requiredPopupWidth < labelWidth) {\n      requiredPopupWidth = labelWidth;\n    }\n  }\n\n  return requiredPopupWidth;\n};\n\n/**\n * This will calculate the optimal margin for each given actor,\n * for a given actor → messageWidth map.\n *\n * An actor's margin is determined by the width of the actor, the width of the largest message that\n * originates from it, and the configured conf.actorMargin.\n *\n * @param actors - The actors map to calculate margins for\n * @param actorToMessageWidth - A map of actor key → max message width it holds\n * @param boxes - The boxes around the actors if any\n */\nfunction calculateActorMargins(\n  actors: { [id: string]: any },\n  actorToMessageWidth: ReturnType<typeof getMaxMessageWidthPerActor>,\n  boxes\n) {\n  let maxHeight = 0;\n  Object.keys(actors).forEach((prop) => {\n    const actor = actors[prop];\n    if (actor.wrap) {\n      actor.description = utils.wrapLabel(\n        actor.description,\n        conf.width - 2 * conf.wrapPadding,\n        actorFont(conf)\n      );\n    }\n    const actDims = utils.calculateTextDimensions(actor.description, actorFont(conf));\n    actor.width = actor.wrap\n      ? conf.width\n      : Math.max(conf.width, actDims.width + 2 * conf.wrapPadding);\n\n    actor.height = actor.wrap ? Math.max(actDims.height, conf.height) : conf.height;\n    maxHeight = Math.max(maxHeight, actor.height);\n  });\n\n  for (const actorKey in actorToMessageWidth) {\n    const actor = actors[actorKey];\n\n    if (!actor) {\n      continue;\n    }\n\n    const nextActor = actors[actor.nextActor];\n\n    // No need to space out an actor that doesn't have a next link\n    if (!nextActor) {\n      const messageWidth = actorToMessageWidth[actorKey];\n      const actorWidth = messageWidth + conf.actorMargin - actor.width / 2;\n      actor.margin = Math.max(actorWidth, conf.actorMargin);\n      continue;\n    }\n\n    const messageWidth = actorToMessageWidth[actorKey];\n    const actorWidth = messageWidth + conf.actorMargin - actor.width / 2 - nextActor.width / 2;\n\n    actor.margin = Math.max(actorWidth, conf.actorMargin);\n  }\n\n  let maxBoxHeight = 0;\n  boxes.forEach((box) => {\n    const textFont = messageFont(conf);\n    let totalWidth = box.actorKeys.reduce((total, aKey) => {\n      return (total += actors[aKey].width + (actors[aKey].margin || 0));\n    }, 0);\n\n    totalWidth -= 2 * conf.boxTextMargin;\n    if (box.wrap) {\n      box.name = utils.wrapLabel(box.name, totalWidth - 2 * conf.wrapPadding, textFont);\n    }\n\n    const boxMsgDimensions = utils.calculateTextDimensions(box.name, textFont);\n    maxBoxHeight = Math.max(boxMsgDimensions.height, maxBoxHeight);\n    const minWidth = Math.max(totalWidth, boxMsgDimensions.width + 2 * conf.wrapPadding);\n    box.margin = conf.boxTextMargin;\n    if (totalWidth < minWidth) {\n      const missing = (minWidth - totalWidth) / 2;\n      box.margin += missing;\n    }\n  });\n  boxes.forEach((box) => (box.textMaxHeight = maxBoxHeight));\n\n  return Math.max(maxHeight, conf.height);\n}\n\nconst buildNoteModel = function (msg, actors, diagObj) {\n  const startx = actors[msg.from].x;\n  const stopx = actors[msg.to].x;\n  const shouldWrap = msg.wrap && msg.message;\n\n  let textDimensions = utils.calculateTextDimensions(\n    shouldWrap ? utils.wrapLabel(msg.message, conf.width, noteFont(conf)) : msg.message,\n    noteFont(conf)\n  );\n  const noteModel = {\n    width: shouldWrap\n      ? conf.width\n      : Math.max(conf.width, textDimensions.width + 2 * conf.noteMargin),\n    height: 0,\n    startx: actors[msg.from].x,\n    stopx: 0,\n    starty: 0,\n    stopy: 0,\n    message: msg.message,\n  };\n  if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF) {\n    noteModel.width = shouldWrap\n      ? Math.max(conf.width, textDimensions.width)\n      : Math.max(\n          actors[msg.from].width / 2 + actors[msg.to].width / 2,\n          textDimensions.width + 2 * conf.noteMargin\n        );\n    noteModel.startx = startx + (actors[msg.from].width + conf.actorMargin) / 2;\n  } else if (msg.placement === diagObj.db.PLACEMENT.LEFTOF) {\n    noteModel.width = shouldWrap\n      ? Math.max(conf.width, textDimensions.width + 2 * conf.noteMargin)\n      : Math.max(\n          actors[msg.from].width / 2 + actors[msg.to].width / 2,\n          textDimensions.width + 2 * conf.noteMargin\n        );\n    noteModel.startx = startx - noteModel.width + (actors[msg.from].width - conf.actorMargin) / 2;\n  } else if (msg.to === msg.from) {\n    textDimensions = utils.calculateTextDimensions(\n      shouldWrap\n        ? utils.wrapLabel(msg.message, Math.max(conf.width, actors[msg.from].width), noteFont(conf))\n        : msg.message,\n      noteFont(conf)\n    );\n    noteModel.width = shouldWrap\n      ? Math.max(conf.width, actors[msg.from].width)\n      : Math.max(actors[msg.from].width, conf.width, textDimensions.width + 2 * conf.noteMargin);\n    noteModel.startx = startx + (actors[msg.from].width - noteModel.width) / 2;\n  } else {\n    noteModel.width =\n      Math.abs(startx + actors[msg.from].width / 2 - (stopx + actors[msg.to].width / 2)) +\n      conf.actorMargin;\n    noteModel.startx =\n      startx < stopx\n        ? startx + actors[msg.from].width / 2 - conf.actorMargin / 2\n        : stopx + actors[msg.to].width / 2 - conf.actorMargin / 2;\n  }\n  if (shouldWrap) {\n    noteModel.message = utils.wrapLabel(\n      msg.message,\n      noteModel.width - 2 * conf.wrapPadding,\n      noteFont(conf)\n    );\n  }\n  log.debug(\n    `NM:[${noteModel.startx},${noteModel.stopx},${noteModel.starty},${noteModel.stopy}:${noteModel.width},${noteModel.height}=${msg.message}]`\n  );\n  return noteModel;\n};\n\nconst buildMessageModel = function (msg, actors, diagObj) {\n  let process = false;\n  if (\n    [\n      diagObj.db.LINETYPE.SOLID_OPEN,\n      diagObj.db.LINETYPE.DOTTED_OPEN,\n      diagObj.db.LINETYPE.SOLID,\n      diagObj.db.LINETYPE.DOTTED,\n      diagObj.db.LINETYPE.SOLID_CROSS,\n      diagObj.db.LINETYPE.DOTTED_CROSS,\n      diagObj.db.LINETYPE.SOLID_POINT,\n      diagObj.db.LINETYPE.DOTTED_POINT,\n    ].includes(msg.type)\n  ) {\n    process = true;\n  }\n  if (!process) {\n    return {};\n  }\n  const fromBounds = activationBounds(msg.from, actors);\n  const toBounds = activationBounds(msg.to, actors);\n  const fromIdx = fromBounds[0] <= toBounds[0] ? 1 : 0;\n  const toIdx = fromBounds[0] < toBounds[0] ? 0 : 1;\n  const allBounds = [...fromBounds, ...toBounds];\n  const boundedWidth = Math.abs(toBounds[toIdx] - fromBounds[fromIdx]);\n  if (msg.wrap && msg.message) {\n    msg.message = utils.wrapLabel(\n      msg.message,\n      Math.max(boundedWidth + 2 * conf.wrapPadding, conf.width),\n      messageFont(conf)\n    );\n  }\n  const msgDims = utils.calculateTextDimensions(msg.message, messageFont(conf));\n\n  return {\n    width: Math.max(\n      msg.wrap ? 0 : msgDims.width + 2 * conf.wrapPadding,\n      boundedWidth + 2 * conf.wrapPadding,\n      conf.width\n    ),\n    height: 0,\n    startx: fromBounds[fromIdx],\n    stopx: toBounds[toIdx],\n    starty: 0,\n    stopy: 0,\n    message: msg.message,\n    type: msg.type,\n    wrap: msg.wrap,\n    fromBounds: Math.min.apply(null, allBounds),\n    toBounds: Math.max.apply(null, allBounds),\n  };\n};\n\nconst calculateLoopBounds = function (messages, actors, _maxWidthPerActor, diagObj) {\n  const loops = {};\n  const stack = [];\n  let current, noteModel, msgModel;\n\n  messages.forEach(function (msg) {\n    msg.id = utils.random({ length: 10 });\n    switch (msg.type) {\n      case diagObj.db.LINETYPE.LOOP_START:\n      case diagObj.db.LINETYPE.ALT_START:\n      case diagObj.db.LINETYPE.OPT_START:\n      case diagObj.db.LINETYPE.PAR_START:\n      case diagObj.db.LINETYPE.CRITICAL_START:\n      case diagObj.db.LINETYPE.BREAK_START:\n        stack.push({\n          id: msg.id,\n          msg: msg.message,\n          from: Number.MAX_SAFE_INTEGER,\n          to: Number.MIN_SAFE_INTEGER,\n          width: 0,\n        });\n        break;\n      case diagObj.db.LINETYPE.ALT_ELSE:\n      case diagObj.db.LINETYPE.PAR_AND:\n      case diagObj.db.LINETYPE.CRITICAL_OPTION:\n        if (msg.message) {\n          current = stack.pop();\n          loops[current.id] = current;\n          loops[msg.id] = current;\n          stack.push(current);\n        }\n        break;\n      case diagObj.db.LINETYPE.LOOP_END:\n      case diagObj.db.LINETYPE.ALT_END:\n      case diagObj.db.LINETYPE.OPT_END:\n      case diagObj.db.LINETYPE.PAR_END:\n      case diagObj.db.LINETYPE.CRITICAL_END:\n      case diagObj.db.LINETYPE.BREAK_END:\n        current = stack.pop();\n        loops[current.id] = current;\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_START:\n        {\n          const actorRect = actors[msg.from ? msg.from.actor : msg.to.actor];\n          const stackedSize = actorActivations(msg.from ? msg.from.actor : msg.to.actor).length;\n          const x =\n            actorRect.x + actorRect.width / 2 + ((stackedSize - 1) * conf.activationWidth) / 2;\n          const toAdd = {\n            startx: x,\n            stopx: x + conf.activationWidth,\n            actor: msg.from.actor,\n            enabled: true,\n          };\n          bounds.activations.push(toAdd);\n        }\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_END:\n        {\n          const lastActorActivationIdx = bounds.activations\n            .map((a) => a.actor)\n            .lastIndexOf(msg.from.actor);\n          delete bounds.activations.splice(lastActorActivationIdx, 1)[0];\n        }\n        break;\n    }\n    const isNote = msg.placement !== undefined;\n    if (isNote) {\n      noteModel = buildNoteModel(msg, actors, diagObj);\n      msg.noteModel = noteModel;\n      stack.forEach((stk) => {\n        current = stk;\n        current.from = Math.min(current.from, noteModel.startx);\n        current.to = Math.max(current.to, noteModel.startx + noteModel.width);\n        current.width =\n          Math.max(current.width, Math.abs(current.from - current.to)) - conf.labelBoxWidth;\n      });\n    } else {\n      msgModel = buildMessageModel(msg, actors, diagObj);\n      msg.msgModel = msgModel;\n      if (msgModel.startx && msgModel.stopx && stack.length > 0) {\n        stack.forEach((stk) => {\n          current = stk;\n          if (msgModel.startx === msgModel.stopx) {\n            const from = actors[msg.from];\n            const to = actors[msg.to];\n            current.from = Math.min(\n              from.x - msgModel.width / 2,\n              from.x - from.width / 2,\n              current.from\n            );\n            current.to = Math.max(to.x + msgModel.width / 2, to.x + from.width / 2, current.to);\n            current.width =\n              Math.max(current.width, Math.abs(current.to - current.from)) - conf.labelBoxWidth;\n          } else {\n            current.from = Math.min(msgModel.startx, current.from);\n            current.to = Math.max(msgModel.stopx, current.to);\n            current.width = Math.max(current.width, msgModel.width) - conf.labelBoxWidth;\n          }\n        });\n      }\n    }\n  });\n  bounds.activations = [];\n  log.debug('Loop type widths:', loops);\n  return loops;\n};\n\nexport default {\n  bounds,\n  drawActors,\n  drawActorsPopup,\n  setConf,\n  draw,\n};\n","import { DiagramDefinition } from '../../diagram-api/types';\n// @ts-ignore: TODO Fix ts errors\nimport parser from './parser/sequenceDiagram';\nimport db from './sequenceDb';\nimport styles from './styles';\nimport renderer from './sequenceRenderer';\n\nexport const diagram: DiagramDefinition = {\n  parser,\n  db,\n  renderer,\n  styles,\n};\n",null,"import { sanitizeText as _sanitizeText } from './diagrams/common/common';\nimport { getConfig } from './config';\nlet title = '';\nlet diagramTitle = '';\nlet description = '';\nconst sanitizeText = (txt: string): string => _sanitizeText(txt, getConfig());\n\nexport const clear = function (): void {\n  title = '';\n  description = '';\n  diagramTitle = '';\n};\n\nexport const setAccTitle = function (txt: string): void {\n  title = sanitizeText(txt).replace(/^\\s+/g, '');\n};\n\nexport const getAccTitle = function (): string {\n  return title || diagramTitle;\n};\n\nexport const setAccDescription = function (txt: string): void {\n  description = sanitizeText(txt).replace(/\\n\\s+/g, '\\n');\n};\n\nexport const getAccDescription = function (): string {\n  return description;\n};\n\nexport const setDiagramTitle = function (txt: string): void {\n  diagramTitle = sanitizeText(txt);\n};\n\nexport const getDiagramTitle = function (): string {\n  return diagramTitle;\n};\n\nexport default {\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle: getDiagramTitle,\n  getAccDescription,\n  setAccDescription,\n  clear,\n};\n",null,"import { log } from './logger';\n\n/**\n * Applies d3 attributes\n *\n * @param {any} d3Elem D3 Element to apply the attributes onto\n * @param {[string, string][]} attrs Object.keys equivalent format of key to value mapping of attributes\n */\nconst d3Attrs = function (d3Elem, attrs) {\n  for (let attr of attrs) {\n    d3Elem.attr(attr[0], attr[1]);\n  }\n};\n\n/**\n * Gives attributes for an SVG's size given arguments\n *\n * @param {number} height The height of the SVG\n * @param {number} width The width of the SVG\n * @param {boolean} useMaxWidth Whether or not to use max-width and set width to 100%\n * @returns {Map<'height' | 'width' | 'style', string>} Attributes for the SVG\n */\nexport const calculateSvgSizeAttrs = function (height, width, useMaxWidth) {\n  let attrs = new Map();\n  if (useMaxWidth) {\n    attrs.set('width', '100%');\n    attrs.set('style', `max-width: ${width}px;`);\n  } else {\n    attrs.set('height', height);\n    attrs.set('width', width);\n  }\n  return attrs;\n};\n\n/**\n * Applies attributes from `calculateSvgSizeAttrs`\n *\n * @param {SVGSVGElement} svgElem The SVG Element to configure\n * @param {number} height The height of the SVG\n * @param {number} width The width of the SVG\n * @param {boolean} useMaxWidth Whether or not to use max-width and set width to 100%\n */\nexport const configureSvgSize = function (svgElem, height, width, useMaxWidth) {\n  const attrs = calculateSvgSizeAttrs(height, width, useMaxWidth);\n  d3Attrs(svgElem, attrs);\n};\nexport const setupGraphViewbox = function (graph, svgElem, padding, useMaxWidth) {\n  const svgBounds = svgElem.node().getBBox();\n  const sWidth = svgBounds.width;\n  const sHeight = svgBounds.height;\n\n  log.info(`SVG bounds: ${sWidth}x${sHeight}`, svgBounds);\n\n  let width = 0;\n  let height = 0;\n  log.info(`Graph bounds: ${width}x${height}`, graph);\n\n  // let tx = 0;\n  // let ty = 0;\n  // if (sWidth > width) {\n  //   tx = (sWidth - width) / 2 + padding;\n  width = sWidth + padding * 2;\n  // } else {\n  //   if (Math.abs(sWidth - width) >= 2 * padding + 1) {\n  //     width = width - padding;\n  //   }\n  // }\n  // if (sHeight > height) {\n  //   ty = (sHeight - height) / 2 + padding;\n  height = sHeight + padding * 2;\n  // }\n\n  // width =\n  log.info(`Calculated bounds: ${width}x${height}`);\n  configureSvgSize(svgElem, height, width, useMaxWidth);\n\n  // Ensure the viewBox includes the whole svgBounds area with extra space for padding\n  // const vBox = `0 0 ${width} ${height}`;\n  const vBox = `${svgBounds.x - padding} ${svgBounds.y - padding} ${\n    svgBounds.width + 2 * padding\n  } ${svgBounds.height + 2 * padding}`;\n\n  svgElem.attr('viewBox', vBox);\n};\n",null,"/** Created by knut on 14-12-11. */\n// @ts-ignore TODO: Investigate D3 issue\nimport { select } from 'd3';\nimport { log } from '../../logger';\nimport { getErrorMessage } from '../../utils';\n\nlet conf = {};\n\n/**\n * Merges the value of `conf` with the passed `cnf`\n *\n * @param cnf - Config to merge\n */\nexport const setConf = function (cnf: any) {\n  conf = { ...conf, ...cnf };\n};\n\n/**\n * Draws a an info picture in the tag with id: id based on the graph definition in text.\n *\n * @param _text - Mermaid graph definition.\n * @param id - The text for the error\n * @param mermaidVersion - The version\n */\nexport const draw = (_text: string, id: string, mermaidVersion: string) => {\n  try {\n    log.debug('Renering svg for syntax error\\n');\n\n    const svg = select('#' + id);\n\n    const g = svg.append('g');\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm411.313,123.313c6.25-6.25 6.25-16.375 0-22.625s-16.375-6.25-22.625,0l-32,32-9.375,9.375-20.688-20.688c-12.484-12.5-32.766-12.5-45.25,0l-16,16c-1.261,1.261-2.304,2.648-3.31,4.051-21.739-8.561-45.324-13.426-70.065-13.426-105.867,0-192,86.133-192,192s86.133,192 192,192 192-86.133 192-192c0-24.741-4.864-48.327-13.426-70.065 1.402-1.007 2.79-2.049 4.051-3.31l16-16c12.5-12.492 12.5-32.758 0-45.25l-20.688-20.688 9.375-9.375 32.001-31.999zm-219.313,100.687c-52.938,0-96,43.063-96,96 0,8.836-7.164,16-16,16s-16-7.164-16-16c0-70.578 57.422-128 128-128 8.836,0 16,7.164 16,16s-7.164,16-16,16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm459.02,148.98c-6.25-6.25-16.375-6.25-22.625,0s-6.25,16.375 0,22.625l16,16c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688 6.25-6.25 6.25-16.375 0-22.625l-16.001-16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm340.395,75.605c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688 6.25-6.25 6.25-16.375 0-22.625l-16-16c-6.25-6.25-16.375-6.25-22.625,0s-6.25,16.375 0,22.625l15.999,16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm400,64c8.844,0 16-7.164 16-16v-32c0-8.836-7.156-16-16-16-8.844,0-16,7.164-16,16v32c0,8.836 7.156,16 16,16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm496,96.586h-32c-8.844,0-16,7.164-16,16 0,8.836 7.156,16 16,16h32c8.844,0 16-7.164 16-16 0-8.836-7.156-16-16-16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm436.98,75.605c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688l32-32c6.25-6.25 6.25-16.375 0-22.625s-16.375-6.25-22.625,0l-32,32c-6.251,6.25-6.251,16.375-0.001,22.625z'\n      );\n\n    g.append('text') // text label for the x axis\n      .attr('class', 'error-text')\n      .attr('x', 1440)\n      .attr('y', 250)\n      .attr('font-size', '150px')\n      .style('text-anchor', 'middle')\n      .text('Syntax error in graph');\n    g.append('text') // text label for the x axis\n      .attr('class', 'error-text')\n      .attr('x', 1250)\n      .attr('y', 400)\n      .attr('font-size', '100px')\n      .style('text-anchor', 'middle')\n      .text('mermaid version ' + mermaidVersion);\n\n    svg.attr('height', 100);\n    svg.attr('width', 500);\n    svg.attr('viewBox', '768 0 912 512');\n  } catch (e) {\n    log.error('Error while rendering info diagram');\n    log.error(getErrorMessage(e));\n  }\n};\n\nexport default {\n  setConf,\n  draw,\n};\n"],"names":["o","parser","lexer","configApi.getConfig","commonClear","actors","text","actorCnt","diagram","bounds","conf","actorActivations","messages","boxes","box","messageWidth","actorWidth","_sanitizeText"],"version":3,"file":"sequenceDiagram-2c95880e.72bab410.js.map","sourceRoot":"/__parcel_source_root/"}