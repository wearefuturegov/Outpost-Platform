{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-4f265eaca558c172.js","node_modules/mermaid/dist/flowDiagram-42bb1e4d.js","node_modules/mermaid/src/diagrams/flowchart/flowChartShapes.js","node_modules/mermaid/src/diagrams/flowchart/flowRenderer.js","node_modules/mermaid/src/diagrams/flowchart/flowDiagram.ts","node_modules/dagre-d3-es/src/index.js","node_modules/dagre-d3-es/src/dagre-js/render.js","node_modules/dagre-d3-es/src/dagre-js/arrows.js","node_modules/dagre-d3-es/src/dagre-js/create-clusters.js","node_modules/dagre-d3-es/src/dagre-js/label/add-label.js","node_modules/dagre-d3-es/src/dagre-js/label/add-svg-label.js","node_modules/dagre-d3-es/src/dagre-js/label/add-text-label.js","node_modules/dagre-d3-es/src/dagre-js/create-edge-labels.js","node_modules/dagre-d3-es/src/dagre-js/create-edge-paths.js","node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-node.js","node_modules/dagre-d3-es/src/dagre-js/create-nodes.js","node_modules/dagre-d3-es/src/dagre-js/position-clusters.js","node_modules/dagre-d3-es/src/dagre-js/position-edge-labels.js","node_modules/dagre-d3-es/src/dagre-js/position-nodes.js","node_modules/dagre-d3-es/src/dagre-js/shapes.js","node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-circle.js","node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-ellipse.js","node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js","node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-line.js","node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-rect.js","node_modules/dagre-d3-es/src/dagre-js/intersect/index.js","node_modules/mermaid/dist/setupGraphViewbox-e35e4124.js","node_modules/mermaid/src/setupGraphViewbox.js","node_modules/mermaid/dist/styles-4fe3d1fc.js","node_modules/mermaid/src/diagrams/flowchart/flowRenderer-v2.js","node_modules/mermaid/src/diagrams/flowchart/styles.ts","node_modules/mermaid/dist/errorRenderer-d05351b9.js","node_modules/mermaid/src/diagrams/error/errorRenderer.ts","node_modules/mermaid/dist/commonDb-2ace122b.js","node_modules/mermaid/src/commonDb.ts","node_modules/mermaid/dist/svgDraw-6a237a99.js","node_modules/mermaid/src/diagrams/class/svgDraw.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"f3f40095ef3d5d33\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}",null,"import { intersectPolygon } from 'dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js';\nimport { intersectRect } from 'dagre-d3-es/src/dagre-js/intersect/intersect-rect.js';\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction question(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const s = (w + h) * 0.9;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, s, s, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction hexagon(parent, bbox, node) {\n  const f = 4;\n  const h = bbox.height;\n  const m = h / f;\n  const w = bbox.width + 2 * m;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction rect_left_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction lean_right(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction lean_left(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: (2 * h) / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - (2 * h) / 6, y: -h },\n    { x: -h / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction inv_trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: (-2 * h) / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction rect_right_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction stadium(parent, bbox, node) {\n  const h = bbox.height;\n  const w = bbox.width + h / 4;\n\n  const shapeSvg = parent\n    .insert('rect', ':first-child')\n    .attr('rx', h / 2)\n    .attr('ry', h / 2)\n    .attr('x', -w / 2)\n    .attr('y', -h / 2)\n    .attr('width', w)\n    .attr('height', h);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction subroutine(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return intersectPolygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction cylinder(parent, bbox, node) {\n  const w = bbox.width;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry;\n\n  const shape =\n    'M 0,' +\n    ry +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    -w +\n    ' 0 l 0,' +\n    h +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 l 0,' +\n    -h;\n\n  const shapeSvg = parent\n    .attr('label-offset-y', ry)\n    .insert('path', ':first-child')\n    .attr('d', shape)\n    .attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2 + ry) + ')');\n\n  node.intersect = function (point) {\n    const pos = intersectRect(node, point);\n    const x = pos.x - node.x;\n\n    if (\n      rx != 0 &&\n      (Math.abs(x) < node.width / 2 ||\n        (Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry))\n    ) {\n      // ellipsis equation: x*x / a*a + y*y / b*b = 1\n      // solve for y to get adjusted value for pos.y\n      let y = ry * ry * (1 - (x * x) / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n\n      pos.y += y;\n    }\n\n    return pos;\n  };\n\n  return shapeSvg;\n}\n\n/** @param render */\nexport function addToRender(render) {\n  render.shapes().question = question;\n  render.shapes().hexagon = hexagon;\n  render.shapes().stadium = stadium;\n  render.shapes().subroutine = subroutine;\n  render.shapes().cylinder = cylinder;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().rect_left_inv_arrow = rect_left_inv_arrow;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().lean_right = lean_right;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().lean_left = lean_left;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().trapezoid = trapezoid;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().inv_trapezoid = inv_trapezoid;\n\n  // Add custom shape for box with inverted arrow on right side\n  render.shapes().rect_right_inv_arrow = rect_right_inv_arrow;\n}\n\n/** @param addShape */\nexport function addToRenderV2(addShape) {\n  addShape({ question });\n  addShape({ hexagon });\n  addShape({ stadium });\n  addShape({ subroutine });\n  addShape({ cylinder });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ rect_left_inv_arrow });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ lean_right });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ lean_left });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ trapezoid });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ inv_trapezoid });\n\n  // Add custom shape for box with inverted arrow on right side\n  addShape({ rect_right_inv_arrow });\n}\n\n/**\n * @param parent\n * @param w\n * @param h\n * @param points\n */\nfunction insertPolygonShape(parent, w, h, points) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('transform', 'translate(' + -w / 2 + ',' + h / 2 + ')');\n}\n\nexport default {\n  addToRender,\n  addToRenderV2,\n};\n","import * as graphlib from 'dagre-d3-es/src/graphlib/index.js';\nimport { select, curveLinear, selectAll } from 'd3';\nimport { getConfig } from '../../config';\nimport { render as Render } from 'dagre-d3-es';\nimport { applyStyle } from 'dagre-d3-es/src/dagre-js/util.js';\nimport { addHtmlLabel } from 'dagre-d3-es/src/dagre-js/label/add-html-label.js';\nimport { log } from '../../logger';\nimport common, { evaluate } from '../common/common';\nimport { interpolateToCurve, getStylesFromArray } from '../../utils';\nimport { setupGraphViewbox } from '../../setupGraphViewbox';\nimport flowChartShapes from './flowChartShapes';\n\nconst conf = {};\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\n\n/**\n * Function that adds the vertices found in the graph definition to the graph to be rendered.\n *\n * @param vert Object containing the vertices.\n * @param g The graph that is to be drawn.\n * @param svgId\n * @param root\n * @param _doc\n * @param diagObj\n */\nexport const addVertices = function (vert, g, svgId, root, _doc, diagObj) {\n  const svg = !root ? select(`[id=\"${svgId}\"]`) : root.select(`[id=\"${svgId}\"]`);\n  const doc = !_doc ? document : _doc;\n  const keys = Object.keys(vert);\n\n  // Iterate through each item in the vertex object (containing all the vertices found) in the graph definition\n  keys.forEach(function (id) {\n    const vertex = vert[id];\n\n    /**\n     * Variable for storing the classes for the vertex\n     *\n     * @type {string}\n     */\n    let classStr = 'default';\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(' ');\n    }\n\n    const styles = getStylesFromArray(vertex.styles);\n\n    // Use vertex id as text in the box if no text is provided by the graph definition\n    let vertexText = vertex.text !== undefined ? vertex.text : vertex.id;\n\n    // We create a SVG label, either by delegating to addHtmlLabel or manually\n    let vertexNode;\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n      const node = {\n        label: vertexText.replace(\n          /fa[blrs]?:fa-[\\w-]+/g,\n          (s) => `<i class='${s.replace(':', ' ')}'></i>`\n        ),\n      };\n      vertexNode = addHtmlLabel(svg, node).node();\n      vertexNode.parentNode.removeChild(vertexNode);\n    } else {\n      const svgLabel = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n      svgLabel.setAttribute('style', styles.labelStyle.replace('color:', 'fill:'));\n\n      const rows = vertexText.split(common.lineBreakRegex);\n\n      for (const row of rows) {\n        const tspan = doc.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n        tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        tspan.setAttribute('dy', '1em');\n        tspan.setAttribute('x', '1');\n        tspan.textContent = row;\n        svgLabel.appendChild(tspan);\n      }\n      vertexNode = svgLabel;\n    }\n\n    let radious = 0;\n    let _shape = '';\n    // Set the shape based parameters\n    switch (vertex.type) {\n      case 'round':\n        radious = 5;\n        _shape = 'rect';\n        break;\n      case 'square':\n        _shape = 'rect';\n        break;\n      case 'diamond':\n        _shape = 'question';\n        break;\n      case 'hexagon':\n        _shape = 'hexagon';\n        break;\n      case 'odd':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'lean_right':\n        _shape = 'lean_right';\n        break;\n      case 'lean_left':\n        _shape = 'lean_left';\n        break;\n      case 'trapezoid':\n        _shape = 'trapezoid';\n        break;\n      case 'inv_trapezoid':\n        _shape = 'inv_trapezoid';\n        break;\n      case 'odd_right':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'circle':\n        _shape = 'circle';\n        break;\n      case 'ellipse':\n        _shape = 'ellipse';\n        break;\n      case 'stadium':\n        _shape = 'stadium';\n        break;\n      case 'subroutine':\n        _shape = 'subroutine';\n        break;\n      case 'cylinder':\n        _shape = 'cylinder';\n        break;\n      case 'group':\n        _shape = 'rect';\n        break;\n      default:\n        _shape = 'rect';\n    }\n    // Add the node\n    log.warn('Adding node', vertex.id, vertex.domId);\n    g.setNode(diagObj.db.lookUpDomId(vertex.id), {\n      labelType: 'svg',\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      label: vertexNode,\n      rx: radious,\n      ry: radious,\n      class: classStr,\n      style: styles.style,\n      id: diagObj.db.lookUpDomId(vertex.id),\n    });\n  });\n};\n\n/**\n * Add edges to graph based on parsed graph definition\n *\n * @param {object} edges The edges to add to the graph\n * @param {object} g The graph object\n * @param diagObj\n */\nexport const addEdges = function (edges, g, diagObj) {\n  let cnt = 0;\n\n  let defaultStyle;\n  let defaultLabelStyle;\n\n  if (edges.defaultStyle !== undefined) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n\n  edges.forEach(function (edge) {\n    cnt++;\n\n    // Identify Link\n    var linkId = 'L-' + edge.start + '-' + edge.end;\n    var linkNameStart = 'LS-' + edge.start;\n    var linkNameEnd = 'LE-' + edge.end;\n\n    const edgeData = {};\n\n    // Set link type for rendering\n    if (edge.type === 'arrow_open') {\n      edgeData.arrowhead = 'none';\n    } else {\n      edgeData.arrowhead = 'normal';\n    }\n\n    let style = '';\n    let labelStyle = '';\n\n    if (edge.style !== undefined) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    } else {\n      switch (edge.stroke) {\n        case 'normal':\n          style = 'fill:none';\n          if (defaultStyle !== undefined) {\n            style = defaultStyle;\n          }\n          if (defaultLabelStyle !== undefined) {\n            labelStyle = defaultLabelStyle;\n          }\n          break;\n        case 'dotted':\n          style = 'fill:none;stroke-width:2px;stroke-dasharray:3;';\n          break;\n        case 'thick':\n          style = ' stroke-width: 3.5px;fill:none';\n          break;\n      }\n    }\n\n    edgeData.style = style;\n    edgeData.labelStyle = labelStyle;\n\n    if (edge.interpolate !== undefined) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== undefined) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n\n    if (edge.text === undefined) {\n      if (edge.style !== undefined) {\n        edgeData.arrowheadStyle = 'fill: #333';\n      }\n    } else {\n      edgeData.arrowheadStyle = 'fill: #333';\n      edgeData.labelpos = 'c';\n\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        edgeData.labelType = 'html';\n        edgeData.label = `<span id=\"L-${linkId}\" class=\"edgeLabel L-${linkNameStart}' L-${linkNameEnd}\" style=\"${\n          edgeData.labelStyle\n        }\">${edge.text.replace(\n          /fa[blrs]?:fa-[\\w-]+/g,\n          (s) => `<i class='${s.replace(':', ' ')}'></i>`\n        )}</span>`;\n      } else {\n        edgeData.labelType = 'text';\n        edgeData.label = edge.text.replace(common.lineBreakRegex, '\\n');\n\n        if (edge.style === undefined) {\n          edgeData.style = edgeData.style || 'stroke: #333; stroke-width: 1.5px;fill:none';\n        }\n\n        edgeData.labelStyle = edgeData.labelStyle.replace('color:', 'fill:');\n      }\n    }\n\n    edgeData.id = linkId;\n    edgeData.class = linkNameStart + ' ' + linkNameEnd;\n    edgeData.minlen = edge.length || 1;\n\n    // Add the edge to the graph\n    g.setEdge(diagObj.db.lookUpDomId(edge.start), diagObj.db.lookUpDomId(edge.end), edgeData, cnt);\n  });\n};\n\n/**\n * Returns the all the styles from classDef statements in the graph definition.\n *\n * @param text\n * @param diagObj\n * @returns {object} ClassDef styles\n */\nexport const getClasses = function (text, diagObj) {\n  log.info('Extracting classes');\n  diagObj.db.clear();\n  try {\n    // Parse the graph definition\n    diagObj.parse(text);\n    return diagObj.db.getClasses();\n  } catch (e) {\n    log.error(e);\n    return {};\n  }\n};\n\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n *\n * @param text\n * @param id\n * @param _version\n * @param diagObj\n */\nexport const draw = function (text, id, _version, diagObj) {\n  log.info('Drawing flowchart');\n  diagObj.db.clear();\n  const { securityLevel, flowchart: conf } = getConfig();\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  // Parse the graph definition\n  try {\n    diagObj.parser.parse(text);\n  } catch (err) {\n    log.debug('Parsing failed');\n  }\n\n  // Fetch the default direction, use TD if none was found\n  let dir = diagObj.db.getDirection();\n  if (dir === undefined) {\n    dir = 'TD';\n  }\n  const nodeSpacing = conf.nodeSpacing || 50;\n  const rankSpacing = conf.rankSpacing || 50;\n\n  // Create the input mermaid.graph\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n  })\n    .setGraph({\n      rankdir: dir,\n      nodesep: nodeSpacing,\n      ranksep: rankSpacing,\n      marginx: 8,\n      marginy: 8,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  for (let i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    diagObj.db.addVertex(subG.id, subG.title, 'group', undefined, subG.classes);\n  }\n\n  // Fetch the vertices/nodes and edges/links from the parsed graph definition\n  const vert = diagObj.db.getVertices();\n  log.warn('Get vertices', vert);\n\n  const edges = diagObj.db.getEdges();\n\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n\n    selectAll('cluster').append('text');\n\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.warn(\n        'Setting subgraph',\n        subG.nodes[j],\n        diagObj.db.lookUpDomId(subG.nodes[j]),\n        diagObj.db.lookUpDomId(subG.id)\n      );\n      g.setParent(diagObj.db.lookUpDomId(subG.nodes[j]), diagObj.db.lookUpDomId(subG.id));\n    }\n  }\n  addVertices(vert, g, id, root, doc, diagObj);\n  addEdges(edges, g, diagObj);\n\n  // Create the renderer\n  const render = new Render();\n\n  // Add custom shapes\n  flowChartShapes.addToRender(render);\n\n  // Add our custom arrow - an empty arrowhead\n  render.arrows().none = function normal(parent, id, edge, type) {\n    const marker = parent\n      .append('marker')\n      .attr('id', id)\n      .attr('viewBox', '0 0 10 10')\n      .attr('refX', 9)\n      .attr('refY', 5)\n      .attr('markerUnits', 'strokeWidth')\n      .attr('markerWidth', 8)\n      .attr('markerHeight', 6)\n      .attr('orient', 'auto');\n\n    const path = marker.append('path').attr('d', 'M 0 0 L 0 0 L 0 0 z');\n    applyStyle(path, edge[type + 'Style']);\n  };\n\n  // Override normal arrowhead defined in d3. Remove style & add class to allow css styling.\n  render.arrows().normal = function normal(parent, id) {\n    const marker = parent\n      .append('marker')\n      .attr('id', id)\n      .attr('viewBox', '0 0 10 10')\n      .attr('refX', 9)\n      .attr('refY', 5)\n      .attr('markerUnits', 'strokeWidth')\n      .attr('markerWidth', 8)\n      .attr('markerHeight', 6)\n      .attr('orient', 'auto');\n\n    marker\n      .append('path')\n      .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n      .attr('class', 'arrowheadPath')\n      .style('stroke-width', 1)\n      .style('stroke-dasharray', '1,0');\n  };\n\n  // Set up an SVG group so that we can translate the final graph.\n  const svg = root.select(`[id=\"${id}\"]`);\n\n  // Run the renderer. This is what draws the final graph.\n  const element = root.select('#' + id + ' g');\n  render(element, g);\n\n  element.selectAll('g.node').attr('title', function () {\n    return diagObj.db.getTooltip(this.id);\n  });\n\n  // Index nodes\n  diagObj.db.indexNodes('subGraph' + i);\n\n  // reposition labels\n  for (i = 0; i < subGraphs.length; i++) {\n    subG = subGraphs[i];\n    if (subG.title !== 'undefined') {\n      const clusterRects = doc.querySelectorAll(\n        '#' + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"] rect'\n      );\n      const clusterEl = doc.querySelectorAll(\n        '#' + id + ' [id=\"' + diagObj.db.lookUpDomId(subG.id) + '\"]'\n      );\n\n      const xPos = clusterRects[0].x.baseVal.value;\n      const yPos = clusterRects[0].y.baseVal.value;\n      const _width = clusterRects[0].width.baseVal.value;\n      const cluster = select(clusterEl[0]);\n      const te = cluster.select('.label');\n      te.attr('transform', `translate(${xPos + _width / 2}, ${yPos + 14})`);\n      te.attr('id', id + 'Text');\n\n      for (let j = 0; j < subG.classes.length; j++) {\n        clusterEl[0].classList.add(subG.classes[j]);\n      }\n    }\n  }\n\n  // Add label rects for non html labels\n  if (!conf.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      // Get dimensions of label\n      const dim = label.getBBox();\n\n      const rect = doc.createElementNS('http://www.w3.org/2000/svg', 'rect');\n      rect.setAttribute('rx', 0);\n      rect.setAttribute('ry', 0);\n      rect.setAttribute('width', dim.width);\n      rect.setAttribute('height', dim.height);\n      // rect.setAttribute('style', 'fill:#e8e8e8;');\n\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n  setupGraphViewbox(g, svg, conf.diagramPadding, conf.useMaxWidth);\n\n  // If node has a link, wrap it in an anchor SVG object.\n  const keys = Object.keys(vert);\n  keys.forEach(function (key) {\n    const vertex = vert[key];\n\n    if (vertex.link) {\n      const node = root.select('#' + id + ' [id=\"' + diagObj.db.lookUpDomId(key) + '\"]');\n      if (node) {\n        const link = doc.createElementNS('http://www.w3.org/2000/svg', 'a');\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'class', vertex.classes.join(' '));\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'href', vertex.link);\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'rel', 'noopener');\n        if (securityLevel === 'sandbox') {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', '_top');\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', vertex.linkTarget);\n        }\n\n        const linkNode = node.insert(function () {\n          return link;\n        }, ':first-child');\n\n        const shape = node.select('.label-container');\n        if (shape) {\n          linkNode.append(function () {\n            return shape.node();\n          });\n        }\n\n        const label = node.select('.label');\n        if (label) {\n          linkNode.append(function () {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\n\nexport default {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw,\n};\n","// @ts-ignore: TODO Fix ts errors\nimport flowParser from './parser/flow';\nimport flowDb from './flowDb';\nimport flowRenderer from './flowRenderer';\nimport flowRendererV2 from './flowRenderer-v2';\nimport flowStyles from './styles';\nimport { MermaidConfig } from '../../config.type';\n\nexport const diagram = {\n  parser: flowParser,\n  db: flowDb,\n  renderer: flowRendererV2,\n  styles: flowStyles,\n  init: (cnf: MermaidConfig) => {\n    if (!cnf.flowchart) {\n      cnf.flowchart = {};\n    }\n    // TODO, broken as of 2022-09-14 (13809b50251845475e6dca65cc395761be38fbd2)\n    cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    flowRenderer.setConf(cnf.flowchart);\n    flowDb.clear();\n    flowDb.setGen('gen-1');\n  },\n};\n","import { render } from './dagre-js/render.js';\nimport * as graphlib from './graphlib/index.js';\n\nimport * as intersect from './dagre-js/intersect/index.js';\n\nexport { graphlib, intersect, render };\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { layout } from '../dagre/index.js';\nimport { arrows, setArrows } from './arrows.js';\nimport { createClusters, setCreateClusters } from './create-clusters.js';\nimport { createEdgeLabels, setCreateEdgeLabels } from './create-edge-labels.js';\nimport { createEdgePaths, setCreateEdgePaths } from './create-edge-paths.js';\nimport { createNodes, setCreateNodes } from './create-nodes.js';\nimport { positionClusters } from './position-clusters.js';\nimport { positionEdgeLabels } from './position-edge-labels.js';\nimport { positionNodes } from './position-nodes.js';\nimport { shapes, setShapes } from './shapes.js';\n\nexport { render };\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var fn = function (svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, 'output');\n    var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\n    var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\n    var nodes = createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) return createNodes;\n    setCreateNodes(value);\n    return fn;\n  };\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) return createClusters;\n    setCreateClusters(value);\n    return fn;\n  };\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) return createEdgeLabels;\n    setCreateEdgeLabels(value);\n    return fn;\n  };\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) return createEdgePaths;\n    setCreateEdgePaths(value);\n    return fn;\n  };\n\n  fn.shapes = function (value) {\n    if (!arguments.length) return shapes;\n    setShapes(value);\n    return fn;\n  };\n\n  fn.arrows = function (value) {\n    if (!arguments.length) return arrows;\n    setArrows(value);\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect',\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: 'normal',\n  curve: d3.curveLinear,\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n    if (!_.has(node, 'label') && !g.children(v).length) {\n      node.label = v;\n    }\n\n    if (_.has(node, 'paddingX')) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX,\n      });\n    }\n\n    if (_.has(node, 'paddingY')) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY,\n      });\n    }\n\n    if (_.has(node, 'padding')) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding,\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, 'width')) {\n      node._prevWidth = node.width;\n    }\n    if (_.has(node, 'height')) {\n      node._prevHeight = node.height;\n    }\n  });\n\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, 'label')) {\n      edge.label = '';\n    }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, '_prevWidth')) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, '_prevHeight')) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select('g.' + name);\n  if (selection.empty()) {\n    selection = root.append('g').attr('class', name);\n  }\n  return selection;\n}\n","import * as util from './util.js';\n\nexport { arrows, setArrows };\n\nvar arrows = {\n  normal,\n  vee,\n  undirected,\n};\n\nfunction setArrows(value) {\n  arrows = value;\n}\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 5 L 10 5')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n","import * as d3 from 'd3';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createClusters, setCreateClusters };\n\nvar createClusters = function (selection, g) {\n  var clusters = g.nodes().filter(function (v) {\n    return util.isSubgraph(g, v);\n  });\n  var svgClusters = selection.selectAll('g.cluster').data(clusters, function (v) {\n    return v;\n  });\n\n  util.applyTransition(svgClusters.exit(), g).style('opacity', 0).remove();\n\n  var enterSelection = svgClusters\n    .enter()\n    .append('g')\n    .attr('class', 'cluster')\n    .attr('id', function (v) {\n      var node = g.node(v);\n      return node.id;\n    })\n    .style('opacity', 0)\n    .each(function (v) {\n      var node = g.node(v);\n      var thisGroup = d3.select(this);\n      d3.select(this).append('rect');\n      var labelGroup = thisGroup.append('g').attr('class', 'label');\n      addLabel(labelGroup, node, node.clusterLabelPos);\n    });\n\n  svgClusters = svgClusters.merge(enterSelection);\n\n  svgClusters = util.applyTransition(svgClusters, g).style('opacity', 1);\n\n  svgClusters.selectAll('rect').each(function (c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  return svgClusters;\n};\n\nfunction setCreateClusters(value) {\n  createClusters = value;\n}\n","import { addHtmlLabel } from './add-html-label.js';\nimport { addSVGLabel } from './add-svg-label.js';\nimport { addTextLabel } from './add-text-label.js';\n\nexport { addLabel };\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append('g');\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === 'svg') {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== 'string' || node.labelType === 'html') {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch (location) {\n    case 'top':\n      y = -node.height / 2;\n      break;\n    case 'bottom':\n      y = node.height / 2 - labelBBox.height;\n      break;\n    default:\n      y = -labelBBox.height / 2;\n  }\n  labelSvg.attr('transform', 'translate(' + -labelBBox.width / 2 + ',' + y + ')');\n\n  return labelSvg;\n}\n","import * as util from '../util.js';\n\nexport { addSVGLabel };\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n","import * as util from '../util.js';\n\nexport { addTextLabel };\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append('text');\n\n  var lines = processEscapeSequences(node.label).split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append('tspan')\n      .attr('xml:space', 'preserve')\n      .attr('dy', '1em')\n      .attr('x', '1')\n      .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = '';\n  var escaped = false;\n  var ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch (ch) {\n        case 'n':\n          newText += '\\n';\n          break;\n        default:\n          newText += ch;\n      }\n      escaped = false;\n    } else if (ch === '\\\\') {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createEdgeLabels, setCreateEdgeLabels };\n\nlet createEdgeLabels = function (selection, g) {\n  var svgEdgeLabels = selection\n    .selectAll('g.edgeLabel')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  svgEdgeLabels.exit().remove();\n  svgEdgeLabels.enter().append('g').classed('edgeLabel', true).style('opacity', 0);\n\n  svgEdgeLabels = selection.selectAll('g.edgeLabel');\n\n  svgEdgeLabels.each(function (e) {\n    var root = d3.select(this);\n    root.select('.label').remove();\n    var edge = g.edge(e);\n    var label = addLabel(root, g.edge(e), 0).classed('label', true);\n    var bbox = label.node().getBBox();\n\n    if (edge.labelId) {\n      label.attr('id', edge.labelId);\n    }\n    if (!_.has(edge, 'width')) {\n      edge.width = bbox.width;\n    }\n    if (!_.has(edge, 'height')) {\n      edge.height = bbox.height;\n    }\n  });\n\n  var exitSelection;\n\n  if (svgEdgeLabels.exit) {\n    exitSelection = svgEdgeLabels.exit();\n  } else {\n    exitSelection = svgEdgeLabels.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgEdgeLabels;\n};\n\nfunction setCreateEdgeLabels(value) {\n  createEdgeLabels = value;\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { intersectNode } from './intersect/intersect-node.js';\nimport * as util from './util.js';\n\nexport { createEdgePaths, setCreateEdgePaths };\n\nvar createEdgePaths = function (selection, g, arrows) {\n  var previousPaths = selection\n    .selectAll('g.edgePath')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  var newPaths = enter(previousPaths, g);\n  exit(previousPaths, g);\n\n  var svgPaths = previousPaths.merge !== undefined ? previousPaths.merge(newPaths) : previousPaths;\n  util.applyTransition(svgPaths, g).style('opacity', 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function (e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr('id', edge.id);\n    }\n\n    util.applyClass(\n      domEdge,\n      edge['class'],\n      (domEdge.classed('update') ? 'update ' : '') + 'edgePath'\n    );\n  });\n\n  svgPaths.selectAll('path.path').each(function (e) {\n    var edge = g.edge(e);\n    edge.arrowheadId = _.uniqueId('arrowhead');\n\n    var domEdge = d3\n      .select(this)\n      .attr('marker-end', function () {\n        return 'url(' + makeFragmentRef(location.href, edge.arrowheadId) + ')';\n      })\n      .style('fill', 'none');\n\n    util.applyTransition(domEdge, g).attr('d', function (e) {\n      return calcPoints(g, e);\n    });\n\n    util.applyStyle(domEdge, edge.style);\n  });\n\n  svgPaths.selectAll('defs *').remove();\n  svgPaths.selectAll('defs').each(function (e) {\n    var edge = g.edge(e);\n    var arrowhead = arrows[edge.arrowhead];\n    arrowhead(d3.select(this), edge.arrowheadId, edge, 'arrowhead');\n  });\n\n  return svgPaths;\n};\n\nfunction setCreateEdgePaths(value) {\n  createEdgePaths = value;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split('#')[0];\n  return baseUrl + '#' + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e);\n  var tail = g.node(e.v);\n  var head = g.node(e.w);\n  var points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  // @ts-expect-error\n  var line = (d3.line || d3.svg.line)()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    });\n\n  (line.curve || line.interpolate)(edge.curve);\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox();\n  var matrix = elem.ownerSVGElement\n    .getScreenCTM()\n    .inverse()\n    .multiply(elem.getScreenCTM())\n    .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\n  svgPathsEnter\n    .append('path')\n    .attr('class', 'path')\n    .attr('d', function (e) {\n      var edge = g.edge(e);\n      var sourceElem = g.node(e.v).elem;\n      var points = _.range(edge.points.length).map(function () {\n        return getCoords(sourceElem);\n      });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append('defs');\n  return svgPathsEnter;\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g).style('opacity', 0).remove();\n}\n","export { intersectNode };\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createNodes, setCreateNodes };\n\nvar createNodes = function (selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function (v) {\n    return !util.isSubgraph(g, v);\n  });\n  var svgNodes = selection\n    .selectAll('g.node')\n    .data(simpleNodes, function (v) {\n      return v;\n    })\n    .classed('update', true);\n\n  svgNodes.exit().remove();\n\n  svgNodes.enter().append('g').attr('class', 'node').style('opacity', 0);\n\n  svgNodes = selection.selectAll('g.node');\n\n  svgNodes.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = d3.select(this);\n    util.applyClass(\n      thisGroup,\n      node['class'],\n      (thisGroup.classed('update') ? 'update ' : '') + 'node'\n    );\n\n    thisGroup.select('g.label').remove();\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    var labelDom = addLabel(labelGroup, node);\n    var shape = shapes[node.shape];\n    var bbox = _.pick(labelDom.node().getBBox(), 'width', 'height');\n\n    node.elem = this;\n\n    if (node.id) {\n      thisGroup.attr('id', node.id);\n    }\n    if (node.labelId) {\n      labelGroup.attr('id', node.labelId);\n    }\n\n    if (_.has(node, 'width')) {\n      bbox.width = node.width;\n    }\n    if (_.has(node, 'height')) {\n      bbox.height = node.height;\n    }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\n      'transform',\n      'translate(' +\n        (node.paddingLeft - node.paddingRight) / 2 +\n        ',' +\n        (node.paddingTop - node.paddingBottom) / 2 +\n        ')'\n    );\n\n    var root = d3.select(this);\n    root.select('.label-container').remove();\n    var shapeSvg = shape(root, bbox, node).classed('label-container', true);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  var exitSelection;\n\n  if (svgNodes.exit) {\n    exitSelection = svgNodes.exit();\n  } else {\n    exitSelection = svgNodes.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgNodes;\n};\n\nfunction setCreateNodes(value) {\n  createNodes = value;\n}\n","import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionClusters };\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n\n  util\n    .applyTransition(created.selectAll('rect'), g)\n    .attr('width', function (v) {\n      return g.node(v).width;\n    })\n    .attr('height', function (v) {\n      return g.node(v).height;\n    })\n    .attr('x', function (v) {\n      var node = g.node(v);\n      return -node.width / 2;\n    })\n    .attr('y', function (v) {\n      var node = g.node(v);\n      return -node.height / 2;\n    });\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { positionEdgeLabels };\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : '';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n","import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionNodes };\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n","import { intersectCircle } from './intersect/intersect-circle.js';\nimport { intersectEllipse } from './intersect/intersect-ellipse.js';\nimport { intersectPolygon } from './intersect/intersect-polygon.js';\nimport { intersectRect } from './intersect/intersect-rect.js';\n\nexport { shapes, setShapes };\n\nvar shapes = {\n  rect,\n  ellipse,\n  circle,\n  diamond,\n};\n\nfunction setShapes(value) {\n  shapes = value;\n}\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent\n    .insert('rect', ':first-child')\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('width', bbox.width)\n    .attr('height', bbox.height);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2;\n  var ry = bbox.height / 2;\n  var shapeSvg = parent\n    .insert('ellipse', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('rx', rx)\n    .attr('ry', ry);\n\n  node.intersect = function (point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2;\n  var shapeSvg = parent\n    .insert('circle', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('r', r);\n\n  node.intersect = function (point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2;\n  var h = (bbox.height * Math.SQRT2) / 2;\n  var points = [\n    { x: 0, y: -h },\n    { x: -w, y: 0 },\n    { x: 0, y: h },\n    { x: w, y: 0 },\n  ];\n  var shapeSvg = parent.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (p) {\n        return p.x + ',' + p.y;\n      })\n      .join(' ')\n  );\n\n  node.intersect = function (p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n","import { intersectEllipse } from './intersect-ellipse.js';\n\nexport { intersectCircle };\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n","export { intersectEllipse };\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n","import { intersectLine } from './intersect-line.js';\n\nexport { intersectPolygon };\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function (entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n","export { intersectLine };\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n","export { intersectRect };\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n","import * as node from './intersect-node.js';\nimport * as circle from './intersect-circle.js';\nimport * as ellipse from './intersect-ellipse.js';\nimport * as polygon from './intersect-polygon.js';\nimport * as rect from './intersect-rect.js';\n\nexport { node, circle, ellipse, polygon, rect };\n",null,"import { log } from './logger';\n\n/**\n * Applies d3 attributes\n *\n * @param {any} d3Elem D3 Element to apply the attributes onto\n * @param {[string, string][]} attrs Object.keys equivalent format of key to value mapping of attributes\n */\nconst d3Attrs = function (d3Elem, attrs) {\n  for (let attr of attrs) {\n    d3Elem.attr(attr[0], attr[1]);\n  }\n};\n\n/**\n * Gives attributes for an SVG's size given arguments\n *\n * @param {number} height The height of the SVG\n * @param {number} width The width of the SVG\n * @param {boolean} useMaxWidth Whether or not to use max-width and set width to 100%\n * @returns {Map<'height' | 'width' | 'style', string>} Attributes for the SVG\n */\nexport const calculateSvgSizeAttrs = function (height, width, useMaxWidth) {\n  let attrs = new Map();\n  if (useMaxWidth) {\n    attrs.set('width', '100%');\n    attrs.set('style', `max-width: ${width}px;`);\n  } else {\n    attrs.set('height', height);\n    attrs.set('width', width);\n  }\n  return attrs;\n};\n\n/**\n * Applies attributes from `calculateSvgSizeAttrs`\n *\n * @param {SVGSVGElement} svgElem The SVG Element to configure\n * @param {number} height The height of the SVG\n * @param {number} width The width of the SVG\n * @param {boolean} useMaxWidth Whether or not to use max-width and set width to 100%\n */\nexport const configureSvgSize = function (svgElem, height, width, useMaxWidth) {\n  const attrs = calculateSvgSizeAttrs(height, width, useMaxWidth);\n  d3Attrs(svgElem, attrs);\n};\nexport const setupGraphViewbox = function (graph, svgElem, padding, useMaxWidth) {\n  const svgBounds = svgElem.node().getBBox();\n  const sWidth = svgBounds.width;\n  const sHeight = svgBounds.height;\n\n  log.info(`SVG bounds: ${sWidth}x${sHeight}`, svgBounds);\n\n  let width = 0;\n  let height = 0;\n  log.info(`Graph bounds: ${width}x${height}`, graph);\n\n  // let tx = 0;\n  // let ty = 0;\n  // if (sWidth > width) {\n  //   tx = (sWidth - width) / 2 + padding;\n  width = sWidth + padding * 2;\n  // } else {\n  //   if (Math.abs(sWidth - width) >= 2 * padding + 1) {\n  //     width = width - padding;\n  //   }\n  // }\n  // if (sHeight > height) {\n  //   ty = (sHeight - height) / 2 + padding;\n  height = sHeight + padding * 2;\n  // }\n\n  // width =\n  log.info(`Calculated bounds: ${width}x${height}`);\n  configureSvgSize(svgElem, height, width, useMaxWidth);\n\n  // Ensure the viewBox includes the whole svgBounds area with extra space for padding\n  // const vBox = `0 0 ${width} ${height}`;\n  const vBox = `${svgBounds.x - padding} ${svgBounds.y - padding} ${\n    svgBounds.width + 2 * padding\n  } ${svgBounds.height + 2 * padding}`;\n\n  svgElem.attr('viewBox', vBox);\n};\n",null,"import * as graphlib from 'dagre-d3-es/src/graphlib/index.js';\nimport { select, curveLinear, selectAll } from 'd3';\n\nimport flowDb from './flowDb';\nimport { getConfig } from '../../config';\nimport utils from '../../utils';\n\nimport { render } from '../../dagre-wrapper/index.js';\nimport { addHtmlLabel } from 'dagre-d3-es/src/dagre-js/label/add-html-label.js';\nimport { log } from '../../logger';\nimport common, { evaluate } from '../common/common';\nimport { interpolateToCurve, getStylesFromArray } from '../../utils';\nimport { setupGraphViewbox } from '../../setupGraphViewbox';\n\nconst conf = {};\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\n\n/**\n * Function that adds the vertices found during parsing to the graph to be rendered.\n *\n * @param vert Object containing the vertices.\n * @param g The graph that is to be drawn.\n * @param svgId\n * @param root\n * @param doc\n * @param diagObj\n */\nexport const addVertices = function (vert, g, svgId, root, doc, diagObj) {\n  const svg = root.select(`[id=\"${svgId}\"]`);\n  const keys = Object.keys(vert);\n\n  // Iterate through each item in the vertex object (containing all the vertices found) in the graph definition\n  keys.forEach(function (id) {\n    const vertex = vert[id];\n\n    /**\n     * Variable for storing the classes for the vertex\n     *\n     * @type {string}\n     */\n    let classStr = 'default';\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(' ');\n    }\n\n    const styles = getStylesFromArray(vertex.styles);\n\n    // Use vertex id as text in the box if no text is provided by the graph definition\n    let vertexText = vertex.text !== undefined ? vertex.text : vertex.id;\n\n    // We create a SVG label, either by delegating to addHtmlLabel or manually\n    let vertexNode;\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n      const node = {\n        label: vertexText.replace(\n          /fa[blrs]?:fa-[\\w-]+/g,\n          (s) => `<i class='${s.replace(':', ' ')}'></i>`\n        ),\n      };\n      vertexNode = addHtmlLabel(svg, node).node();\n      vertexNode.parentNode.removeChild(vertexNode);\n    } else {\n      const svgLabel = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n      svgLabel.setAttribute('style', styles.labelStyle.replace('color:', 'fill:'));\n\n      const rows = vertexText.split(common.lineBreakRegex);\n\n      for (const row of rows) {\n        const tspan = doc.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n        tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        tspan.setAttribute('dy', '1em');\n        tspan.setAttribute('x', '1');\n        tspan.textContent = row;\n        svgLabel.appendChild(tspan);\n      }\n      vertexNode = svgLabel;\n    }\n\n    let radious = 0;\n    let _shape = '';\n    // Set the shape based parameters\n    switch (vertex.type) {\n      case 'round':\n        radious = 5;\n        _shape = 'rect';\n        break;\n      case 'square':\n        _shape = 'rect';\n        break;\n      case 'diamond':\n        _shape = 'question';\n        break;\n      case 'hexagon':\n        _shape = 'hexagon';\n        break;\n      case 'odd':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'lean_right':\n        _shape = 'lean_right';\n        break;\n      case 'lean_left':\n        _shape = 'lean_left';\n        break;\n      case 'trapezoid':\n        _shape = 'trapezoid';\n        break;\n      case 'inv_trapezoid':\n        _shape = 'inv_trapezoid';\n        break;\n      case 'odd_right':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'circle':\n        _shape = 'circle';\n        break;\n      case 'ellipse':\n        _shape = 'ellipse';\n        break;\n      case 'stadium':\n        _shape = 'stadium';\n        break;\n      case 'subroutine':\n        _shape = 'subroutine';\n        break;\n      case 'cylinder':\n        _shape = 'cylinder';\n        break;\n      case 'group':\n        _shape = 'rect';\n        break;\n      case 'doublecircle':\n        _shape = 'doublecircle';\n        break;\n      default:\n        _shape = 'rect';\n    }\n    // Add the node\n    g.setNode(vertex.id, {\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      labelText: vertexText,\n      rx: radious,\n      ry: radious,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      link: vertex.link,\n      linkTarget: vertex.linkTarget,\n      tooltip: diagObj.db.getTooltip(vertex.id) || '',\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      haveCallback: vertex.haveCallback,\n      width: vertex.type === 'group' ? 500 : undefined,\n      dir: vertex.dir,\n      type: vertex.type,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding,\n    });\n\n    log.info('setNode', {\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      labelText: vertexText,\n      rx: radious,\n      ry: radious,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      width: vertex.type === 'group' ? 500 : undefined,\n      type: vertex.type,\n      dir: vertex.dir,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding,\n    });\n  });\n};\n\n/**\n * Add edges to graph based on parsed graph definition\n *\n * @param {object} edges The edges to add to the graph\n * @param {object} g The graph object\n * @param diagObj\n */\nexport const addEdges = function (edges, g, diagObj) {\n  log.info('abc78 edges = ', edges);\n  let cnt = 0;\n  let linkIdCnt = {};\n\n  let defaultStyle;\n  let defaultLabelStyle;\n\n  if (edges.defaultStyle !== undefined) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n\n  edges.forEach(function (edge) {\n    cnt++;\n\n    // Identify Link\n    var linkIdBase = 'L-' + edge.start + '-' + edge.end;\n    // count the links from+to the same node to give unique id\n    if (linkIdCnt[linkIdBase] === undefined) {\n      linkIdCnt[linkIdBase] = 0;\n      log.info('abc78 new entry', linkIdBase, linkIdCnt[linkIdBase]);\n    } else {\n      linkIdCnt[linkIdBase]++;\n      log.info('abc78 new entry', linkIdBase, linkIdCnt[linkIdBase]);\n    }\n    let linkId = linkIdBase + '-' + linkIdCnt[linkIdBase];\n    log.info('abc78 new link id to be used is', linkIdBase, linkId, linkIdCnt[linkIdBase]);\n    var linkNameStart = 'LS-' + edge.start;\n    var linkNameEnd = 'LE-' + edge.end;\n\n    const edgeData = { style: '', labelStyle: '' };\n    edgeData.minlen = edge.length || 1;\n    //edgeData.id = 'id' + cnt;\n\n    // Set link type for rendering\n    if (edge.type === 'arrow_open') {\n      edgeData.arrowhead = 'none';\n    } else {\n      edgeData.arrowhead = 'normal';\n    }\n\n    // Check of arrow types, placed here in order not to break old rendering\n    edgeData.arrowTypeStart = 'arrow_open';\n    edgeData.arrowTypeEnd = 'arrow_open';\n\n    /* eslint-disable no-fallthrough */\n    switch (edge.type) {\n      case 'double_arrow_cross':\n        edgeData.arrowTypeStart = 'arrow_cross';\n      case 'arrow_cross':\n        edgeData.arrowTypeEnd = 'arrow_cross';\n        break;\n      case 'double_arrow_point':\n        edgeData.arrowTypeStart = 'arrow_point';\n      case 'arrow_point':\n        edgeData.arrowTypeEnd = 'arrow_point';\n        break;\n      case 'double_arrow_circle':\n        edgeData.arrowTypeStart = 'arrow_circle';\n      case 'arrow_circle':\n        edgeData.arrowTypeEnd = 'arrow_circle';\n        break;\n    }\n\n    let style = '';\n    let labelStyle = '';\n\n    switch (edge.stroke) {\n      case 'normal':\n        style = 'fill:none;';\n        if (defaultStyle !== undefined) {\n          style = defaultStyle;\n        }\n        if (defaultLabelStyle !== undefined) {\n          labelStyle = defaultLabelStyle;\n        }\n        edgeData.thickness = 'normal';\n        edgeData.pattern = 'solid';\n        break;\n      case 'dotted':\n        edgeData.thickness = 'normal';\n        edgeData.pattern = 'dotted';\n        edgeData.style = 'fill:none;stroke-width:2px;stroke-dasharray:3;';\n        break;\n      case 'thick':\n        edgeData.thickness = 'thick';\n        edgeData.pattern = 'solid';\n        edgeData.style = 'stroke-width: 3.5px;fill:none;';\n        break;\n      case 'invisible':\n        edgeData.thickness = 'invisible';\n        edgeData.pattern = 'solid';\n        edgeData.style = 'stroke-width: 0;fill:none;';\n        break;\n    }\n    if (edge.style !== undefined) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    }\n\n    edgeData.style = edgeData.style += style;\n    edgeData.labelStyle = edgeData.labelStyle += labelStyle;\n\n    if (edge.interpolate !== undefined) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== undefined) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n\n    if (edge.text === undefined) {\n      if (edge.style !== undefined) {\n        edgeData.arrowheadStyle = 'fill: #333';\n      }\n    } else {\n      edgeData.arrowheadStyle = 'fill: #333';\n      edgeData.labelpos = 'c';\n    }\n\n    edgeData.labelType = 'text';\n    edgeData.label = edge.text.replace(common.lineBreakRegex, '\\n');\n\n    if (edge.style === undefined) {\n      edgeData.style = edgeData.style || 'stroke: #333; stroke-width: 1.5px;fill:none;';\n    }\n\n    edgeData.labelStyle = edgeData.labelStyle.replace('color:', 'fill:');\n\n    edgeData.id = linkId;\n    edgeData.classes = 'flowchart-link ' + linkNameStart + ' ' + linkNameEnd;\n\n    // Add the edge to the graph\n    g.setEdge(edge.start, edge.end, edgeData, cnt);\n  });\n};\n\n/**\n * Returns the all the styles from classDef statements in the graph definition.\n *\n * @param text\n * @param diagObj\n * @returns {object} ClassDef styles\n */\nexport const getClasses = function (text, diagObj) {\n  log.info('Extracting classes');\n  diagObj.db.clear();\n  try {\n    // Parse the graph definition\n    diagObj.parse(text);\n    return diagObj.db.getClasses();\n  } catch (e) {\n    return;\n  }\n};\n\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n *\n * @param text\n * @param id\n */\n\nexport const draw = function (text, id, _version, diagObj) {\n  log.info('Drawing flowchart');\n  diagObj.db.clear();\n  flowDb.setGen('gen-2');\n  // Parse the graph definition\n  diagObj.parser.parse(text);\n\n  // Fetch the default direction, use TD if none was found\n  let dir = diagObj.db.getDirection();\n  if (dir === undefined) {\n    dir = 'TD';\n  }\n\n  const { securityLevel, flowchart: conf } = getConfig();\n  const nodeSpacing = conf.nodeSpacing || 50;\n  const rankSpacing = conf.rankSpacing || 50;\n\n  // Handle root and document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  // Create the input mermaid.graph\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n  })\n    .setGraph({\n      rankdir: dir,\n      nodesep: nodeSpacing,\n      ranksep: rankSpacing,\n      marginx: 0,\n      marginy: 0,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  log.info('Subgraphs - ', subGraphs);\n  for (let i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    log.info('Subgraph - ', subG);\n    diagObj.db.addVertex(subG.id, subG.title, 'group', undefined, subG.classes, subG.dir);\n  }\n\n  // Fetch the vertices/nodes and edges/links from the parsed graph definition\n  const vert = diagObj.db.getVertices();\n\n  const edges = diagObj.db.getEdges();\n\n  log.info('Edges', edges);\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    // for (let i = 0; i < subGraphs.length; i++) {\n    subG = subGraphs[i];\n\n    selectAll('cluster').append('text');\n\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.info('Setting up subgraphs', subG.nodes[j], subG.id);\n      g.setParent(subG.nodes[j], subG.id);\n    }\n  }\n  addVertices(vert, g, id, root, doc, diagObj);\n  addEdges(edges, g, diagObj);\n\n  // Add custom shapes\n  // flowChartShapes.addToRenderV2(addShape);\n\n  // Set up an SVG group so that we can translate the final graph.\n  const svg = root.select(`[id=\"${id}\"]`);\n\n  // Run the renderer. This is what draws the final graph.\n  const element = root.select('#' + id + ' g');\n  render(element, g, ['point', 'circle', 'cross'], 'flowchart', id);\n\n  utils.insertTitle(svg, 'flowchartTitleText', conf.titleTopMargin, diagObj.db.getDiagramTitle());\n\n  setupGraphViewbox(g, svg, conf.diagramPadding, conf.useMaxWidth);\n\n  // Index nodes\n  diagObj.db.indexNodes('subGraph' + i);\n\n  // Add label rects for non html labels\n  if (!conf.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      // Get dimensions of label\n      const dim = label.getBBox();\n\n      const rect = doc.createElementNS('http://www.w3.org/2000/svg', 'rect');\n      rect.setAttribute('rx', 0);\n      rect.setAttribute('ry', 0);\n      rect.setAttribute('width', dim.width);\n      rect.setAttribute('height', dim.height);\n\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n\n  // If node has a link, wrap it in an anchor SVG object.\n  const keys = Object.keys(vert);\n  keys.forEach(function (key) {\n    const vertex = vert[key];\n\n    if (vertex.link) {\n      const node = select('#' + id + ' [id=\"' + key + '\"]');\n      if (node) {\n        const link = doc.createElementNS('http://www.w3.org/2000/svg', 'a');\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'class', vertex.classes.join(' '));\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'href', vertex.link);\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'rel', 'noopener');\n        if (securityLevel === 'sandbox') {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', '_top');\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', vertex.linkTarget);\n        }\n\n        const linkNode = node.insert(function () {\n          return link;\n        }, ':first-child');\n\n        const shape = node.select('.label-container');\n        if (shape) {\n          linkNode.append(function () {\n            return shape.node();\n          });\n        }\n\n        const label = node.select('.label');\n        if (label) {\n          linkNode.append(function () {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\n\nexport default {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw,\n};\n","/** Returns the styles given options */\nexport interface FlowChartStyleOptions {\n  arrowheadColor: string;\n  border2: string;\n  clusterBkg: string;\n  clusterBorder: string;\n  edgeLabelBackground: string;\n  fontFamily: string;\n  lineColor: string;\n  mainBkg: string;\n  nodeBorder: string;\n  nodeTextColor: string;\n  tertiaryColor: string;\n  textColor: string;\n  titleColor: string;\n}\n\nconst getStyles = (options: FlowChartStyleOptions) =>\n  `.label {\n    font-family: ${options.fontFamily};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n  .cluster-label text {\n    fill: ${options.titleColor};\n  }\n  .cluster-label span {\n    color: ${options.titleColor};\n  }\n\n  .label text,span {\n    fill: ${options.nodeTextColor || options.textColor};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${options.edgeLabelBackground};\n      fill: ${options.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  .cluster rect {\n    fill: ${options.clusterBkg};\n    stroke: ${options.clusterBorder};\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  .cluster span {\n    color: ${options.titleColor};\n  }\n  /* .cluster div {\n    color: ${options.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${options.fontFamily};\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`;\n\nexport default getStyles;\n",null,"/** Created by knut on 14-12-11. */\n// @ts-ignore TODO: Investigate D3 issue\nimport { select } from 'd3';\nimport { log } from '../../logger';\nimport { getErrorMessage } from '../../utils';\n\nlet conf = {};\n\n/**\n * Merges the value of `conf` with the passed `cnf`\n *\n * @param cnf - Config to merge\n */\nexport const setConf = function (cnf: any) {\n  conf = { ...conf, ...cnf };\n};\n\n/**\n * Draws a an info picture in the tag with id: id based on the graph definition in text.\n *\n * @param _text - Mermaid graph definition.\n * @param id - The text for the error\n * @param mermaidVersion - The version\n */\nexport const draw = (_text: string, id: string, mermaidVersion: string) => {\n  try {\n    log.debug('Renering svg for syntax error\\n');\n\n    const svg = select('#' + id);\n\n    const g = svg.append('g');\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm411.313,123.313c6.25-6.25 6.25-16.375 0-22.625s-16.375-6.25-22.625,0l-32,32-9.375,9.375-20.688-20.688c-12.484-12.5-32.766-12.5-45.25,0l-16,16c-1.261,1.261-2.304,2.648-3.31,4.051-21.739-8.561-45.324-13.426-70.065-13.426-105.867,0-192,86.133-192,192s86.133,192 192,192 192-86.133 192-192c0-24.741-4.864-48.327-13.426-70.065 1.402-1.007 2.79-2.049 4.051-3.31l16-16c12.5-12.492 12.5-32.758 0-45.25l-20.688-20.688 9.375-9.375 32.001-31.999zm-219.313,100.687c-52.938,0-96,43.063-96,96 0,8.836-7.164,16-16,16s-16-7.164-16-16c0-70.578 57.422-128 128-128 8.836,0 16,7.164 16,16s-7.164,16-16,16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm459.02,148.98c-6.25-6.25-16.375-6.25-22.625,0s-6.25,16.375 0,22.625l16,16c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688 6.25-6.25 6.25-16.375 0-22.625l-16.001-16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm340.395,75.605c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688 6.25-6.25 6.25-16.375 0-22.625l-16-16c-6.25-6.25-16.375-6.25-22.625,0s-6.25,16.375 0,22.625l15.999,16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm400,64c8.844,0 16-7.164 16-16v-32c0-8.836-7.156-16-16-16-8.844,0-16,7.164-16,16v32c0,8.836 7.156,16 16,16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm496,96.586h-32c-8.844,0-16,7.164-16,16 0,8.836 7.156,16 16,16h32c8.844,0 16-7.164 16-16 0-8.836-7.156-16-16-16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm436.98,75.605c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688l32-32c6.25-6.25 6.25-16.375 0-22.625s-16.375-6.25-22.625,0l-32,32c-6.251,6.25-6.251,16.375-0.001,22.625z'\n      );\n\n    g.append('text') // text label for the x axis\n      .attr('class', 'error-text')\n      .attr('x', 1440)\n      .attr('y', 250)\n      .attr('font-size', '150px')\n      .style('text-anchor', 'middle')\n      .text('Syntax error in graph');\n    g.append('text') // text label for the x axis\n      .attr('class', 'error-text')\n      .attr('x', 1250)\n      .attr('y', 400)\n      .attr('font-size', '100px')\n      .style('text-anchor', 'middle')\n      .text('mermaid version ' + mermaidVersion);\n\n    svg.attr('height', 100);\n    svg.attr('width', 500);\n    svg.attr('viewBox', '768 0 912 512');\n  } catch (e) {\n    log.error('Error while rendering info diagram');\n    log.error(getErrorMessage(e));\n  }\n};\n\nexport default {\n  setConf,\n  draw,\n};\n",null,"import { sanitizeText as _sanitizeText } from './diagrams/common/common';\nimport { getConfig } from './config';\nlet title = '';\nlet diagramTitle = '';\nlet description = '';\nconst sanitizeText = (txt: string): string => _sanitizeText(txt, getConfig());\n\nexport const clear = function (): void {\n  title = '';\n  description = '';\n  diagramTitle = '';\n};\n\nexport const setAccTitle = function (txt: string): void {\n  title = sanitizeText(txt).replace(/^\\s+/g, '');\n};\n\nexport const getAccTitle = function (): string {\n  return title || diagramTitle;\n};\n\nexport const setAccDescription = function (txt: string): void {\n  description = sanitizeText(txt).replace(/\\n\\s+/g, '\\n');\n};\n\nexport const getAccDescription = function (): string {\n  return description;\n};\n\nexport const setDiagramTitle = function (txt: string): void {\n  diagramTitle = sanitizeText(txt);\n};\n\nexport const getDiagramTitle = function (): string {\n  return diagramTitle;\n};\n\nexport default {\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle: getDiagramTitle,\n  getAccDescription,\n  setAccDescription,\n  clear,\n};\n",null,"import { line, curveBasis } from 'd3';\nimport utils from '../../utils';\nimport { log } from '../../logger';\nimport { parseGenericTypes } from '../common/common';\n\nlet edgeCount = 0;\nexport const drawEdge = function (elem, path, relation, conf, diagObj) {\n  const getRelationType = function (type) {\n    switch (type) {\n      case diagObj.db.relationType.AGGREGATION:\n        return 'aggregation';\n      case diagObj.db.relationType.EXTENSION:\n        return 'extension';\n      case diagObj.db.relationType.COMPOSITION:\n        return 'composition';\n      case diagObj.db.relationType.DEPENDENCY:\n        return 'dependency';\n      case diagObj.db.relationType.LOLLIPOP:\n        return 'lollipop';\n    }\n  };\n\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n\n  // The data for our line\n  const lineData = path.points;\n\n  // This is the accessor function we talked about above\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curveBasis);\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', 'edge' + edgeCount)\n    .attr('class', 'relation');\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  if (relation.relation.lineType == 1) {\n    svgPath.attr('class', 'relation dashed-line');\n  }\n  if (relation.relation.lineType == 10) {\n    svgPath.attr('class', 'relation dotted-line');\n  }\n  if (relation.relation.type1 !== 'none') {\n    svgPath.attr(\n      'marker-start',\n      'url(' + url + '#' + getRelationType(relation.relation.type1) + 'Start' + ')'\n    );\n  }\n  if (relation.relation.type2 !== 'none') {\n    svgPath.attr(\n      'marker-end',\n      'url(' + url + '#' + getRelationType(relation.relation.type2) + 'End' + ')'\n    );\n  }\n\n  let x, y;\n  const l = path.points.length;\n  // Calculate Label position\n  let labelPosition = utils.calcLabelPosition(path.points);\n  x = labelPosition.x;\n  y = labelPosition.y;\n\n  let p1_card_x, p1_card_y;\n  let p2_card_x, p2_card_y;\n\n  if (l % 2 !== 0 && l > 1) {\n    let cardinality_1_point = utils.calcCardinalityPosition(\n      relation.relation.type1 !== 'none',\n      path.points,\n      path.points[0]\n    );\n    let cardinality_2_point = utils.calcCardinalityPosition(\n      relation.relation.type2 !== 'none',\n      path.points,\n      path.points[l - 1]\n    );\n\n    log.debug('cardinality_1_point ' + JSON.stringify(cardinality_1_point));\n    log.debug('cardinality_2_point ' + JSON.stringify(cardinality_2_point));\n\n    p1_card_x = cardinality_1_point.x;\n    p1_card_y = cardinality_1_point.y;\n    p2_card_x = cardinality_2_point.x;\n    p2_card_y = cardinality_2_point.y;\n  }\n\n  if (relation.title !== undefined) {\n    const g = elem.append('g').attr('class', 'classLabel');\n    const label = g\n      .append('text')\n      .attr('class', 'label')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('fill', 'red')\n      .attr('text-anchor', 'middle')\n      .text(relation.title);\n\n    window.label = label;\n    const bounds = label.node().getBBox();\n\n    g.insert('rect', ':first-child')\n      .attr('class', 'box')\n      .attr('x', bounds.x - conf.padding / 2)\n      .attr('y', bounds.y - conf.padding / 2)\n      .attr('width', bounds.width + conf.padding)\n      .attr('height', bounds.height + conf.padding);\n  }\n\n  log.info('Rendering relation ' + JSON.stringify(relation));\n  if (relation.relationTitle1 !== undefined && relation.relationTitle1 !== 'none') {\n    const g = elem.append('g').attr('class', 'cardinality');\n    g.append('text')\n      .attr('class', 'type1')\n      .attr('x', p1_card_x)\n      .attr('y', p1_card_y)\n      .attr('fill', 'black')\n      .attr('font-size', '6')\n      .text(relation.relationTitle1);\n  }\n  if (relation.relationTitle2 !== undefined && relation.relationTitle2 !== 'none') {\n    const g = elem.append('g').attr('class', 'cardinality');\n    g.append('text')\n      .attr('class', 'type2')\n      .attr('x', p2_card_x)\n      .attr('y', p2_card_y)\n      .attr('fill', 'black')\n      .attr('font-size', '6')\n      .text(relation.relationTitle2);\n  }\n\n  edgeCount++;\n};\n\n/**\n * Renders a class diagram\n *\n * @param {SVGSVGElement} elem The element to draw it into\n * @param classDef\n * @param conf\n * @param diagObj\n * @todo Add more information in the JSDOC here\n */\nexport const drawClass = function (elem, classDef, conf, diagObj) {\n  log.debug('Rendering class ', classDef, conf);\n\n  const id = classDef.id;\n  const classInfo = {\n    id: id,\n    label: classDef.id,\n    width: 0,\n    height: 0,\n  };\n\n  // add class group\n  const g = elem.append('g').attr('id', diagObj.db.lookUpDomId(id)).attr('class', 'classGroup');\n\n  // add title\n  let title;\n  if (classDef.link) {\n    title = g\n      .append('svg:a')\n      .attr('xlink:href', classDef.link)\n      .attr('target', classDef.linkTarget)\n      .append('text')\n      .attr('y', conf.textHeight + conf.padding)\n      .attr('x', 0);\n  } else {\n    title = g\n      .append('text')\n      .attr('y', conf.textHeight + conf.padding)\n      .attr('x', 0);\n  }\n\n  // add annotations\n  let isFirst = true;\n  classDef.annotations.forEach(function (member) {\n    const titleText2 = title.append('tspan').text('«' + member + '»');\n    if (!isFirst) {\n      titleText2.attr('dy', conf.textHeight);\n    }\n    isFirst = false;\n  });\n\n  let classTitleString = classDef.id;\n\n  if (classDef.type !== undefined && classDef.type !== '') {\n    classTitleString += '<' + classDef.type + '>';\n  }\n\n  const classTitle = title.append('tspan').text(classTitleString).attr('class', 'title');\n\n  // If class has annotations the title needs to have an offset of the text height\n  if (!isFirst) {\n    classTitle.attr('dy', conf.textHeight);\n  }\n\n  const titleHeight = title.node().getBBox().height;\n\n  const membersLine = g\n    .append('line') // text label for the x axis\n    .attr('x1', 0)\n    .attr('y1', conf.padding + titleHeight + conf.dividerMargin / 2)\n    .attr('y2', conf.padding + titleHeight + conf.dividerMargin / 2);\n\n  const members = g\n    .append('text') // text label for the x axis\n    .attr('x', conf.padding)\n    .attr('y', titleHeight + conf.dividerMargin + conf.textHeight)\n    .attr('fill', 'white')\n    .attr('class', 'classText');\n\n  isFirst = true;\n  classDef.members.forEach(function (member) {\n    addTspan(members, member, isFirst, conf);\n    isFirst = false;\n  });\n\n  const membersBox = members.node().getBBox();\n\n  const methodsLine = g\n    .append('line') // text label for the x axis\n    .attr('x1', 0)\n    .attr('y1', conf.padding + titleHeight + conf.dividerMargin + membersBox.height)\n    .attr('y2', conf.padding + titleHeight + conf.dividerMargin + membersBox.height);\n\n  const methods = g\n    .append('text') // text label for the x axis\n    .attr('x', conf.padding)\n    .attr('y', titleHeight + 2 * conf.dividerMargin + membersBox.height + conf.textHeight)\n    .attr('fill', 'white')\n    .attr('class', 'classText');\n\n  isFirst = true;\n\n  classDef.methods.forEach(function (method) {\n    addTspan(methods, method, isFirst, conf);\n    isFirst = false;\n  });\n\n  const classBox = g.node().getBBox();\n  var cssClassStr = ' ';\n\n  if (classDef.cssClasses.length > 0) {\n    cssClassStr = cssClassStr + classDef.cssClasses.join(' ');\n  }\n\n  const rect = g\n    .insert('rect', ':first-child')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', classBox.width + 2 * conf.padding)\n    .attr('height', classBox.height + conf.padding + 0.5 * conf.dividerMargin)\n    .attr('class', cssClassStr);\n\n  const rectWidth = rect.node().getBBox().width;\n\n  // Center title\n  // We subtract the width of each text element from the class box width and divide it by 2\n  title.node().childNodes.forEach(function (x) {\n    x.setAttribute('x', (rectWidth - x.getBBox().width) / 2);\n  });\n\n  if (classDef.tooltip) {\n    title.insert('title').text(classDef.tooltip);\n  }\n\n  membersLine.attr('x2', rectWidth);\n  methodsLine.attr('x2', rectWidth);\n\n  classInfo.width = rectWidth;\n  classInfo.height = classBox.height + conf.padding + 0.5 * conf.dividerMargin;\n\n  return classInfo;\n};\n\n/**\n * Renders a note diagram\n *\n * @param {SVGSVGElement} elem The element to draw it into\n * @param {{id: string; text: string; class: string;}} note\n * @param conf\n * @param diagObj\n * @todo Add more information in the JSDOC here\n */\nexport const drawNote = function (elem, note, conf, diagObj) {\n  log.debug('Rendering note ', note, conf);\n\n  const id = note.id;\n  const noteInfo = {\n    id: id,\n    text: note.text,\n    width: 0,\n    height: 0,\n  };\n\n  // add class group\n  const g = elem.append('g').attr('id', id).attr('class', 'classGroup');\n\n  // add text\n  let text = g\n    .append('text')\n    .attr('y', conf.textHeight + conf.padding)\n    .attr('x', 0);\n\n  const lines = JSON.parse(`\"${note.text}\"`).split('\\n');\n\n  lines.forEach(function (line) {\n    log.debug(`Adding line: ${line}`);\n    text.append('tspan').text(line).attr('class', 'title').attr('dy', conf.textHeight);\n  });\n\n  const noteBox = g.node().getBBox();\n\n  const rect = g\n    .insert('rect', ':first-child')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', noteBox.width + 2 * conf.padding)\n    .attr(\n      'height',\n      noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin\n    );\n\n  const rectWidth = rect.node().getBBox().width;\n\n  // Center title\n  // We subtract the width of each text element from the class box width and divide it by 2\n  text.node().childNodes.forEach(function (x) {\n    x.setAttribute('x', (rectWidth - x.getBBox().width) / 2);\n  });\n\n  noteInfo.width = rectWidth;\n  noteInfo.height =\n    noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin;\n\n  return noteInfo;\n};\n\nexport const parseMember = function (text) {\n  const fieldRegEx = /^([#+~-])?(\\w+)(~\\w+~|\\[])?\\s+(\\w+) *([$*])?$/;\n  const methodRegEx = /^([#+|~-])?(\\w+) *\\( *(.*)\\) *([$*])? *(\\w*[[\\]|~]*\\s*\\w*~?)$/;\n\n  let fieldMatch = text.match(fieldRegEx);\n  let methodMatch = text.match(methodRegEx);\n\n  if (fieldMatch && !methodMatch) {\n    return buildFieldDisplay(fieldMatch);\n  } else if (methodMatch) {\n    return buildMethodDisplay(methodMatch);\n  } else {\n    return buildLegacyDisplay(text);\n  }\n};\n\nconst buildFieldDisplay = function (parsedText) {\n  let cssStyle = '';\n  let displayText = '';\n\n  try {\n    let visibility = parsedText[1] ? parsedText[1].trim() : '';\n    let fieldType = parsedText[2] ? parsedText[2].trim() : '';\n    let genericType = parsedText[3] ? parseGenericTypes(parsedText[3].trim()) : '';\n    let fieldName = parsedText[4] ? parsedText[4].trim() : '';\n    let classifier = parsedText[5] ? parsedText[5].trim() : '';\n\n    displayText = visibility + fieldType + genericType + ' ' + fieldName;\n    cssStyle = parseClassifier(classifier);\n  } catch (err) {\n    displayText = parsedText;\n  }\n\n  return {\n    displayText: displayText,\n    cssStyle: cssStyle,\n  };\n};\n\nconst buildMethodDisplay = function (parsedText) {\n  let cssStyle = '';\n  let displayText = '';\n\n  try {\n    let visibility = parsedText[1] ? parsedText[1].trim() : '';\n    let methodName = parsedText[2] ? parsedText[2].trim() : '';\n    let parameters = parsedText[3] ? parseGenericTypes(parsedText[3].trim()) : '';\n    let classifier = parsedText[4] ? parsedText[4].trim() : '';\n    let returnType = parsedText[5] ? ' : ' + parseGenericTypes(parsedText[5]).trim() : '';\n\n    displayText = visibility + methodName + '(' + parameters + ')' + returnType;\n    cssStyle = parseClassifier(classifier);\n  } catch (err) {\n    displayText = parsedText;\n  }\n\n  return {\n    displayText: displayText,\n    cssStyle: cssStyle,\n  };\n};\n\nconst buildLegacyDisplay = function (text) {\n  // if for some reason we don't have any match, use old format to parse text\n  let displayText = '';\n  let cssStyle = '';\n  let returnType = '';\n  let methodStart = text.indexOf('(');\n  let methodEnd = text.indexOf(')');\n\n  if (methodStart > 1 && methodEnd > methodStart && methodEnd <= text.length) {\n    let visibility = '';\n    let methodName = '';\n\n    let firstChar = text.substring(0, 1);\n    if (firstChar.match(/\\w/)) {\n      methodName = text.substring(0, methodStart).trim();\n    } else {\n      if (firstChar.match(/[#+~-]/)) {\n        visibility = firstChar;\n      }\n\n      methodName = text.substring(1, methodStart).trim();\n    }\n\n    const parameters = text.substring(methodStart + 1, methodEnd);\n    const classifier = text.substring(methodEnd + 1, 1);\n    cssStyle = parseClassifier(text.substring(methodEnd + 1, methodEnd + 2));\n\n    displayText = visibility + methodName + '(' + parseGenericTypes(parameters.trim()) + ')';\n\n    if (methodEnd < text.length) {\n      returnType = text.substring(methodEnd + 2).trim();\n      if (returnType !== '') {\n        returnType = ' : ' + parseGenericTypes(returnType);\n        displayText += returnType;\n      }\n    }\n  } else {\n    // finally - if all else fails, just send the text back as written (other than parsing for generic types)\n    displayText = parseGenericTypes(text);\n  }\n\n  return {\n    displayText,\n    cssStyle,\n  };\n};\n/**\n * Adds a <tspan> for a member in a diagram\n *\n * @param {SVGElement} textEl The element to append to\n * @param {string} txt The member\n * @param {boolean} isFirst\n * @param {{ padding: string; textHeight: string }} conf The configuration for the member\n */\nconst addTspan = function (textEl, txt, isFirst, conf) {\n  let member = parseMember(txt);\n\n  const tSpan = textEl.append('tspan').attr('x', conf.padding).text(member.displayText);\n\n  if (member.cssStyle !== '') {\n    tSpan.attr('style', member.cssStyle);\n  }\n\n  if (!isFirst) {\n    tSpan.attr('dy', conf.textHeight);\n  }\n};\n\n/**\n * Gives the styles for a classifier\n *\n * @param {'+' | '-' | '#' | '~' | '*' | '$'} classifier The classifier string\n * @returns {string} Styling for the classifier\n */\nconst parseClassifier = function (classifier) {\n  switch (classifier) {\n    case '*':\n      return 'font-style:italic;';\n    case '$':\n      return 'text-decoration:underline;';\n    default:\n      return '';\n  }\n};\n\nexport default {\n  drawClass,\n  drawEdge,\n  drawNote,\n  parseMember,\n};\n"],"names":["render","conf","i","Render","id","_sanitizeText","line"],"version":3,"file":"flowDiagram-42bb1e4d.ef3d5d33.js.map","sourceRoot":"/__parcel_source_root/"}